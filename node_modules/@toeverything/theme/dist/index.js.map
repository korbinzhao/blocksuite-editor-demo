{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["export const camelToKebab = (s: string) => {\n  if (typeof s !== 'string') return '';\n  return s\n    .replace(/-/g, '_')\n    .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n    .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')\n    .toLowerCase()\n    .replace(/(\\D+)(\\d+)$/g, '$1-$2')\n    .replace(/\\s|_/g, '-');\n};\n\ntype Kebab<\n  T extends string,\n  A extends string = ''\n> = T extends `${infer F}${infer R}`\n  ? Kebab<R, `${A}${F extends Lowercase<F> ? '' : '-'}${Lowercase<F>}`>\n  : A;\n\nexport type AffineTheme = typeof lightTheme & {\n  editorMode: 'page' | 'edgeless';\n};\n\nexport type AffineCssVariables = {\n  [Key in `--affine-${Kebab<keyof AffineTheme>}`]: string;\n};\n\nconst basicFontFamily =\n  'apple-system, BlinkMacSystemFont,Helvetica Neue, Tahoma, PingFang SC, Microsoft Yahei, Arial,Hiragino Sans GB, sans-serif, Apple Color Emoji, Segoe UI Emoji,Segoe UI Symbol, Noto Color Emoji';\n\nexport const baseTheme = {\n  // font\n  fontFamily: `Avenir Next, Poppins, ${basicFontFamily}`,\n  fontNumberFamily: `Roboto Mono, ${basicFontFamily}`,\n  fontCodeFamily: `Space Mono, Consolas, Menlo, Monaco, Courier, monospace, ${basicFontFamily}`,\n  fontTitle: '36px',\n  fontH1: '28px',\n  fontH2: '26px',\n  fontH3: '24px',\n  fontH4: '22px',\n  fontH5: '20px',\n  fontH6: '18px',\n  fontBase: '16px',\n  fontSm: '14px',\n  fontXs: '12px',\n\n  lineHeight: 'calc(1em + 8px)',\n\n  zIndexModal: '1000',\n  zIndexPopover: '1000',\n\n  paragraphSpace: '8px',\n  popoverRadius: '12px',\n\n  editorWidth: '800px',\n  zoom: '1',\n  scale: 'calc(1 / var(--affine-zoom))',\n  paletteLineYellow: 'rgb(255, 232, 56)',\n  paletteLineOrange: 'rgb(255, 175, 56)',\n  paletteLineTangerine: 'rgb(255, 99, 31)',\n  paletteLineRed: 'rgb(252, 63, 85)',\n  paletteLineMagenta: 'rgb(255, 56, 179)',\n  paletteLinePurple: 'rgb(182, 56, 255)',\n  paletteLineNavy: 'rgb(59, 37, 204)',\n  paletteLineBlue: 'rgb(79, 144, 255)',\n  paletteLineGreen: 'rgb(16, 203, 134)',\n  paletteLineWhite: 'rgb(255, 255, 255)',\n  paletteLineBlack: 'rgb(0, 0, 0)',\n  paletteLineGrey: 'rgb(153, 153, 153)',\n  paletteShapeYellow: 'rgb(255, 241, 136)',\n  paletteShapeOrange: 'rgb(255, 207, 136)',\n  paletteShapeTangerine: 'rgb(255, 161, 121)',\n  paletteShapeRed: 'rgb(253, 140, 153)',\n  paletteShapeMagenta: 'rgb(255, 136, 209)',\n  paletteShapePurple: 'rgb(211, 136, 255)',\n  paletteShapeNavy: 'rgb(137, 124, 224)',\n  paletteShapeBlue: 'rgb(149, 188, 255)',\n  paletteShapeGreen: 'rgb(112, 224, 182)',\n  paletteShapeWhite: 'rgb(255, 255, 255)',\n  paletteShapeBlack: 'rgb(0, 0, 0)',\n  paletteShapeGrey: 'rgb(194, 194, 194)',\n\n  blue: 'rgba(30, 150, 235, 1)',\n  pureBlack10: 'rgba(0, 0, 0, 0.1)',\n  toggleCircleBackgroundColor: 'rgba(255, 255, 255, 1)',\n  toggleDisableBackgroundColor: 'rgba(119, 117, 125, 1)',\n  toggleCircleShadow: '0px 1px 2px 0px rgba(0, 0, 0, 0.25), inset -2px -3px 2px 0px rgba(0, 0, 0, 0.05)',\n};\n\n// Refs: https://github.com/toeverything/AFFiNE/issues/1796\nexport const lightTheme = {\n  ...baseTheme,\n\n  themeMode: 'light',\n\n  brandColor: 'rgb(84, 56, 255)',\n  tertiaryColor: 'rgb(243, 240, 255)',\n  primaryColor: 'rgb(84, 56, 255)',\n  primaryColor04: 'rgba(84, 56, 255, 0.04)',\n  secondaryColor: 'rgb(125, 145, 255)',\n  backgroundSuccessColor: 'rgba(231, 250, 243, 1)',\n  backgroundErrorColor: 'rgba(253, 236, 235, 1)',\n  backgroundProcessingColor: 'rgba(233, 241, 255, 1)',\n  backgroundWarningColor: 'rgba(255, 239, 233, 1)',\n  backgroundPrimaryColor: 'rgb(255, 255, 255)',\n  backgroundOverlayPanelColor: 'rgb(251, 251, 252)',\n  backgroundSecondaryColor: 'rgba(252, 252, 253, 1)',\n  backgroundTertiaryColor: 'rgb(245, 243, 247)',\n  backgroundCodeBlock: 'rgba(247, 246, 250, 1)',\n  backgroundModalColor: 'rgba(0, 0, 0, 0.4)',\n  textPrimaryColor: 'rgb(66, 65, 73)',\n  textSecondaryColor: 'rgb(142, 141, 145)',\n  textDisableColor: 'rgb(169, 169, 173)',\n  textEmphasisColor: 'rgb(84, 56, 255)',\n  hoverColor: 'rgba(0, 0, 0, 0.04)',\n  hoverColorFilled: 'rgb(245, 245, 245)',\n  linkColor: 'rgba(88, 114, 251, 1)',\n  quoteColor: 'rgba(194, 193, 197, 1)',\n  listColor: 'rgba(133, 131, 140, 1)',\n  iconColor: 'rgb(119, 117, 125)',\n  iconSecondary: 'rgba(119, 117, 125, 0.6)',\n  borderColor: 'rgb(227, 226, 228)',\n  dividerColor: 'rgb(227, 226, 228)',\n  placeholderColor: 'rgb(192, 191, 193)',\n  edgelessGridColor: 'rgb(230, 230, 230)',\n  successColor: 'rgb(16, 203, 134)',\n  warningColor: 'rgb(255, 99, 31)',\n  errorColor: 'rgb(235, 67, 53)',\n  processingColor: 'rgb(39, 118, 255)',\n  black10: 'rgba(0, 0, 0, 0.1)',\n  black30: 'rgba(0, 0, 0, 0.3)',\n  black50: 'rgba(0, 0, 0, 0.5)',\n  black60: 'rgba(0, 0, 0, 0.6)',\n  black80: 'rgba(0, 0, 0, 0.8)',\n  black90: 'rgba(0, 0, 0, 0.9)',\n  black: 'rgb(0, 0, 0)',\n  white10: 'rgba(255, 255, 255, 0.1)',\n  white30: 'rgba(255, 255, 255, 0.3)',\n  white50: 'rgba(255, 255, 255, 0.5)',\n  white60: 'rgba(255, 255, 255, 0.6)',\n  white80: 'rgba(255, 255, 255, 0.8)',\n  white90: 'rgba(255, 255, 255, 0.9)',\n  white: 'rgb(255, 255, 255)',\n  tagWhite: 'rgba(245, 245, 245, 1)',\n  tagGray: 'rgba(227, 226, 224, 1)',\n  tagRed: 'rgba(255, 225, 225, 1)',\n  tagOrange: 'rgba(255, 233, 201, 1)',\n  tagYellow: 'rgba(255, 243, 215, 1)',\n  tagGreen: 'rgba(222, 244, 231, 1)',\n  tagTeal: 'rgba(222, 244, 243, 1)',\n  tagBlue: 'rgba(225, 238, 255, 1)',\n  tagPurple: 'rgba(243, 240, 255, 1)',\n  tagPink: 'rgba(251, 231, 255, 1)',\n  tooltip: 'rgba(66, 65, 73, 1)',\n  menuShadow:\n    '0px 0px 12px rgba(66, 65, 73, 0.14), inset 0px 0px 0px 0.5px rgba(227, 227, 228, 1)',\n  shadow1: '0px 0px 4px 0px rgba(66, 65, 73, 0.14)',\n  shadow2: '0px 0px 12px 0px rgba(66, 65, 73, 0.18)',\n  shadow3: '0px 0px 20px 0px rgba(66, 65, 73, 0.22)',\n  popoverShadow:\n    '0px 0px 30px rgba(75, 75, 75, 0.2), 0px 0px 4px rgba(75, 75, 75, 0.3), inset 0px 0px 0px rgba(227, 226, 228, 1)',\n  floatButtonShadow:\n    '0px 0px 10px rgba(0, 0, 0, 0.05), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.1)',\n  buttonGrayColor: 'rgba(245, 245, 245, 1)',\n  cardBackgroundBlue: 'linear-gradient(180deg, #F0F3FD 0%, #FCFCFD 100%)',\n  cardBackgroundGreen: 'linear-gradient(180deg, #F3F9FD 0%, #FCFCFD 100%)',\n};\n\nexport const darkTheme = {\n  ...baseTheme,\n\n  themeMode: 'dark',\n\n  brandColor: 'rgba(156, 140, 255, 1)',\n  primaryColor: 'rgba(106, 86, 229, 1)',\n  primaryColor04: 'rgba(84, 56, 255, 0.1)',\n  secondaryColor: 'rgb(144, 150, 245)',\n  tertiaryColor: 'rgb(30, 30, 30)',\n  hoverColor: 'rgba(255, 255, 255, 0.1)',\n  hoverColorFilled: 'rgb(35, 35, 35)',\n  iconColor: 'rgb(168, 168, 160)',\n  iconSecondary: 'rgba(168,168,160,0.6)',\n  borderColor: 'rgba(46, 46, 46, 1)',\n  dividerColor: 'rgb(114, 114, 114)',\n  placeholderColor: 'rgb(62, 62, 63)',\n  quoteColor: 'rgba(142, 141, 145, 1)',\n  listColor: 'rgba(156, 155, 160, 1)',\n  linkColor: 'rgb(185, 191, 227)',\n  edgelessGridColor: 'rgb(49, 49, 49)',\n  successColor: 'rgb(77, 213, 181)',\n  warningColor: 'rgb(255, 123, 77)',\n  errorColor: 'rgb(212, 140, 130)',\n  processingColor: 'rgb(195, 215, 255)',\n  textEmphasisColor: 'rgba(156, 140, 255, 1)',\n  textPrimaryColor: 'rgb(234, 234, 234)',\n  textSecondaryColor: 'rgb(156, 156, 160)',\n  textDisableColor: 'rgb(119, 117, 125)',\n  black10: 'rgba(255, 255, 255, 0.1)',\n  black30: 'rgba(255, 255, 255, 0.3)',\n  black50: 'rgba(255, 255, 255, 0.5)',\n  black60: 'rgba(255, 255, 255, 0.6)',\n  black80: 'rgba(255, 255, 255, 0.8)',\n  black90: 'rgba(255, 255, 255, 0.9)',\n  black: 'rgb(255, 255, 255)',\n  white10: 'rgba(0, 0, 0, 0.1)',\n  white30: 'rgba(0, 0, 0, 0.3)',\n  white50: 'rgba(0, 0, 0, 0.5)',\n  white60: 'rgba(0, 0, 0, 0.6)',\n  white80: 'rgba(0, 0, 0, 0.8)',\n  white90: 'rgba(0, 0, 0, 0.9)',\n  white: 'rgb(0, 0, 0)',\n  backgroundCodeBlock: 'rgba(46, 44, 52, 1)',\n  backgroundTertiaryColor: 'rgb(30, 30, 30)',\n  backgroundProcessingColor: 'rgba(24, 27, 32, 1)',\n  backgroundErrorColor: 'rgba(21, 14, 13, 1)',\n  backgroundWarningColor: 'rgba(26, 10, 3, 1)',\n  backgroundSuccessColor: 'rgba(8, 21, 18, 1)',\n  backgroundPrimaryColor: 'rgb(20, 20, 20)',\n  backgroundSecondaryColor: 'rgb(32, 32, 32)',\n  backgroundModalColor: 'rgba(0, 0, 0, 0.5)',\n  backgroundOverlayPanelColor: 'rgb(30, 30, 30)',\n  tagBlue: 'rgba(8, 67, 136, 1)',\n  tagGreen: 'rgba(44, 108, 63, 1)',\n  tagTeal: 'rgba(26, 115, 110, 1)',\n  tagWhite: 'rgba(67, 67, 67, 1)',\n  tagPurple: 'rgba(47, 30, 113, 1)',\n  tagRed: 'rgba(111, 50, 50, 1)',\n  tagPink: 'rgba(155, 106, 106, 1)',\n  tagYellow: 'rgba(150, 132, 49, 1)',\n  tagOrange: 'rgba(185, 129, 46, 1)',\n  tagGray: 'rgba(41, 41, 41, 1)',\n  tooltip: 'rgba(234, 234, 234, 1)',\n  menuShadow:\n    '0px 0px 12px rgba(0, 0, 0, 1), inset 0px 0px 0px 0.5px rgba(46, 46, 46, 1)',\n  shadow1: '0px 0px 4px 2px rgba(15, 15, 15, 1)',\n  shadow2: '0px 0px 12px 4px rgba(15, 15, 15, 0.8)',\n  shadow3: '0px 0px 22px 8px rgba(15, 15, 15, 0.9)',\n  popoverShadow:\n    '0px 0px 30px rgba(12, 12, 12, 0.8), 0px 0px 8px rgba(12, 12, 12, 1), inset 0px 0px 0px rgba(46, 46, 46, 1)',\n  floatButtonShadow:\n    '0px 0px 10px rgba(0, 0, 0, 0.05), 0px 0px 0px 0.5px rgba(0, 0, 0, 0.1)',\n  buttonGrayColor: 'rgba(85, 85, 85, 1)',\n  cardBackgroundBlue: 'linear-gradient(180deg, #14171F 0%, #202020 100%)',\n  cardBackgroundGreen: 'linear-gradient(180deg, #192023 0%, #202020 100%)',\n} satisfies Omit<AffineTheme, 'editorMode'>;\n\nexport const lightCssVariables = Object.entries(lightTheme).reduce(\n  (variables, [key, value]) => {\n    variables[`--affine-${camelToKebab(key)}` as keyof AffineCssVariables] =\n      value;\n    return variables;\n  },\n  {} as AffineCssVariables\n);\n\nexport const darkCssVariables = Object.entries(darkTheme).reduce(\n  (variables, [key, value]) => {\n    variables[`--affine-${camelToKebab(key)}` as keyof AffineCssVariables] =\n      value;\n    return variables;\n  },\n  {} as AffineCssVariables\n);\n"],"names":["camelToKebab","s","basicFontFamily","baseTheme","lightTheme","darkTheme","lightCssVariables","variables","key","value","darkCssVariables"],"mappings":"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"}