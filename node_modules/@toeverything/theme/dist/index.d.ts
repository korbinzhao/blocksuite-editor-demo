export declare const camelToKebab: (s: string) => string;
type Kebab<T extends string, A extends string = ''> = T extends `${infer F}${infer R}` ? Kebab<R, `${A}${F extends Lowercase<F> ? '' : '-'}${Lowercase<F>}`> : A;
export type AffineTheme = typeof lightTheme & {
    editorMode: 'page' | 'edgeless';
};
export type AffineCssVariables = {
    [Key in `--affine-${Kebab<keyof AffineTheme>}`]: string;
};
export declare const baseTheme: {
    fontFamily: string;
    fontNumberFamily: string;
    fontCodeFamily: string;
    fontTitle: string;
    fontH1: string;
    fontH2: string;
    fontH3: string;
    fontH4: string;
    fontH5: string;
    fontH6: string;
    fontBase: string;
    fontSm: string;
    fontXs: string;
    lineHeight: string;
    zIndexModal: string;
    zIndexPopover: string;
    paragraphSpace: string;
    popoverRadius: string;
    editorWidth: string;
    zoom: string;
    scale: string;
    paletteLineYellow: string;
    paletteLineOrange: string;
    paletteLineTangerine: string;
    paletteLineRed: string;
    paletteLineMagenta: string;
    paletteLinePurple: string;
    paletteLineNavy: string;
    paletteLineBlue: string;
    paletteLineGreen: string;
    paletteLineWhite: string;
    paletteLineBlack: string;
    paletteLineGrey: string;
    paletteShapeYellow: string;
    paletteShapeOrange: string;
    paletteShapeTangerine: string;
    paletteShapeRed: string;
    paletteShapeMagenta: string;
    paletteShapePurple: string;
    paletteShapeNavy: string;
    paletteShapeBlue: string;
    paletteShapeGreen: string;
    paletteShapeWhite: string;
    paletteShapeBlack: string;
    paletteShapeGrey: string;
    blue: string;
    pureBlack10: string;
    toggleCircleBackgroundColor: string;
    toggleDisableBackgroundColor: string;
    toggleCircleShadow: string;
};
export declare const lightTheme: {
    themeMode: string;
    brandColor: string;
    tertiaryColor: string;
    primaryColor: string;
    primaryColor04: string;
    secondaryColor: string;
    backgroundSuccessColor: string;
    backgroundErrorColor: string;
    backgroundProcessingColor: string;
    backgroundWarningColor: string;
    backgroundPrimaryColor: string;
    backgroundOverlayPanelColor: string;
    backgroundSecondaryColor: string;
    backgroundTertiaryColor: string;
    backgroundCodeBlock: string;
    backgroundModalColor: string;
    textPrimaryColor: string;
    textSecondaryColor: string;
    textDisableColor: string;
    textEmphasisColor: string;
    hoverColor: string;
    hoverColorFilled: string;
    linkColor: string;
    quoteColor: string;
    listColor: string;
    iconColor: string;
    iconSecondary: string;
    borderColor: string;
    dividerColor: string;
    placeholderColor: string;
    edgelessGridColor: string;
    successColor: string;
    warningColor: string;
    errorColor: string;
    processingColor: string;
    black10: string;
    black30: string;
    black50: string;
    black60: string;
    black80: string;
    black90: string;
    black: string;
    white10: string;
    white30: string;
    white50: string;
    white60: string;
    white80: string;
    white90: string;
    white: string;
    tagWhite: string;
    tagGray: string;
    tagRed: string;
    tagOrange: string;
    tagYellow: string;
    tagGreen: string;
    tagTeal: string;
    tagBlue: string;
    tagPurple: string;
    tagPink: string;
    tooltip: string;
    menuShadow: string;
    shadow1: string;
    shadow2: string;
    shadow3: string;
    popoverShadow: string;
    floatButtonShadow: string;
    buttonGrayColor: string;
    cardBackgroundBlue: string;
    cardBackgroundGreen: string;
    fontFamily: string;
    fontNumberFamily: string;
    fontCodeFamily: string;
    fontTitle: string;
    fontH1: string;
    fontH2: string;
    fontH3: string;
    fontH4: string;
    fontH5: string;
    fontH6: string;
    fontBase: string;
    fontSm: string;
    fontXs: string;
    lineHeight: string;
    zIndexModal: string;
    zIndexPopover: string;
    paragraphSpace: string;
    popoverRadius: string;
    editorWidth: string;
    zoom: string;
    scale: string;
    paletteLineYellow: string;
    paletteLineOrange: string;
    paletteLineTangerine: string;
    paletteLineRed: string;
    paletteLineMagenta: string;
    paletteLinePurple: string;
    paletteLineNavy: string;
    paletteLineBlue: string;
    paletteLineGreen: string;
    paletteLineWhite: string;
    paletteLineBlack: string;
    paletteLineGrey: string;
    paletteShapeYellow: string;
    paletteShapeOrange: string;
    paletteShapeTangerine: string;
    paletteShapeRed: string;
    paletteShapeMagenta: string;
    paletteShapePurple: string;
    paletteShapeNavy: string;
    paletteShapeBlue: string;
    paletteShapeGreen: string;
    paletteShapeWhite: string;
    paletteShapeBlack: string;
    paletteShapeGrey: string;
    blue: string;
    pureBlack10: string;
    toggleCircleBackgroundColor: string;
    toggleDisableBackgroundColor: string;
    toggleCircleShadow: string;
};
export declare const darkTheme: {
    themeMode: string;
    brandColor: string;
    primaryColor: string;
    primaryColor04: string;
    secondaryColor: string;
    tertiaryColor: string;
    hoverColor: string;
    hoverColorFilled: string;
    iconColor: string;
    iconSecondary: string;
    borderColor: string;
    dividerColor: string;
    placeholderColor: string;
    quoteColor: string;
    listColor: string;
    linkColor: string;
    edgelessGridColor: string;
    successColor: string;
    warningColor: string;
    errorColor: string;
    processingColor: string;
    textEmphasisColor: string;
    textPrimaryColor: string;
    textSecondaryColor: string;
    textDisableColor: string;
    black10: string;
    black30: string;
    black50: string;
    black60: string;
    black80: string;
    black90: string;
    black: string;
    white10: string;
    white30: string;
    white50: string;
    white60: string;
    white80: string;
    white90: string;
    white: string;
    backgroundCodeBlock: string;
    backgroundTertiaryColor: string;
    backgroundProcessingColor: string;
    backgroundErrorColor: string;
    backgroundWarningColor: string;
    backgroundSuccessColor: string;
    backgroundPrimaryColor: string;
    backgroundSecondaryColor: string;
    backgroundModalColor: string;
    backgroundOverlayPanelColor: string;
    tagBlue: string;
    tagGreen: string;
    tagTeal: string;
    tagWhite: string;
    tagPurple: string;
    tagRed: string;
    tagPink: string;
    tagYellow: string;
    tagOrange: string;
    tagGray: string;
    tooltip: string;
    menuShadow: string;
    shadow1: string;
    shadow2: string;
    shadow3: string;
    popoverShadow: string;
    floatButtonShadow: string;
    buttonGrayColor: string;
    cardBackgroundBlue: string;
    cardBackgroundGreen: string;
    fontFamily: string;
    fontNumberFamily: string;
    fontCodeFamily: string;
    fontTitle: string;
    fontH1: string;
    fontH2: string;
    fontH3: string;
    fontH4: string;
    fontH5: string;
    fontH6: string;
    fontBase: string;
    fontSm: string;
    fontXs: string;
    lineHeight: string;
    zIndexModal: string;
    zIndexPopover: string;
    paragraphSpace: string;
    popoverRadius: string;
    editorWidth: string;
    zoom: string;
    scale: string;
    paletteLineYellow: string;
    paletteLineOrange: string;
    paletteLineTangerine: string;
    paletteLineRed: string;
    paletteLineMagenta: string;
    paletteLinePurple: string;
    paletteLineNavy: string;
    paletteLineBlue: string;
    paletteLineGreen: string;
    paletteLineWhite: string;
    paletteLineBlack: string;
    paletteLineGrey: string;
    paletteShapeYellow: string;
    paletteShapeOrange: string;
    paletteShapeTangerine: string;
    paletteShapeRed: string;
    paletteShapeMagenta: string;
    paletteShapePurple: string;
    paletteShapeNavy: string;
    paletteShapeBlue: string;
    paletteShapeGreen: string;
    paletteShapeWhite: string;
    paletteShapeBlack: string;
    paletteShapeGrey: string;
    blue: string;
    pureBlack10: string;
    toggleCircleBackgroundColor: string;
    toggleDisableBackgroundColor: string;
    toggleCircleShadow: string;
};
export declare const lightCssVariables: AffineCssVariables;
export declare const darkCssVariables: AffineCssVariables;
export {};
