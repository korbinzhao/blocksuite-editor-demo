{
  "version": 3,
  "sources": ["../../lit-html/src/directives/keyed.ts", "../../@blocksuite/editor/src/utils/editor.ts", "../../@blocksuite/editor/src/components/editor-container.ts", "../../@blocksuite/blocks/src/models.ts", "../../@blocksuite/editor/src/components/simple-affine-editor.ts", "../../@blocksuite/editor/src/index.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n", "import {\n  asyncFocusRichText,\n  BlockHub,\n  createBookmarkBlock,\n  getAllowSelectedBlocks,\n  getEdgelessPage,\n  getServiceOrRegister,\n  tryUpdateFrameSize,\n  uploadImageFromLocal,\n} from '@blocksuite/blocks';\nimport {\n  type BlockComponentElement,\n  getClosestFrameBlockElementById,\n  getCurrentBlockRange,\n  getHoveringFrame,\n  type Point,\n  Rect,\n} from '@blocksuite/blocks/std';\nimport { PAGE_BLOCK_PADDING_BOTTOM } from '@blocksuite/global/config';\nimport { assertExists } from '@blocksuite/global/utils';\nimport type { BaseBlockModel, Page } from '@blocksuite/store';\n\nimport type { EditorContainer } from '../components/index.js';\n\nexport const checkEditorElementActive = () =>\n  document.activeElement?.closest('editor-container') != null;\n\nexport const createBlockHub: (\n  editor: EditorContainer,\n  page: Page\n) => BlockHub = (editor: EditorContainer, page: Page) => {\n  const blockHub = new BlockHub({\n    mouseRoot: editor,\n    enableDatabase: !!page.awarenessStore.getFlag('enable_database'),\n    onClickCard: async (data: { flavour: string; type?: string }) => {\n      const models = [];\n\n      const isDatabase = data.flavour === 'affine:database';\n      if (isDatabase && !page.awarenessStore.getFlag('enable_database')) {\n        console.warn('database block is not enabled');\n        return;\n      }\n      if (data.flavour === 'affine:embed' && data.type === 'image') {\n        models.push(...(await uploadImageFromLocal(page)));\n      } else {\n        models.push(data);\n      }\n      const last = page.root?.lastItem();\n      const range = getCurrentBlockRange(page);\n      if (range) {\n        const lastModel = range.models[range.models.length - 1];\n        if (data.flavour === 'affine:bookmark') {\n          const parent = page.getParent(lastModel);\n          assertExists(parent);\n          const index = parent.children.indexOf(lastModel);\n          createBookmarkBlock(parent, index + 1);\n          return;\n        }\n        const arr = page.addSiblingBlocks(lastModel, models, 'after');\n        const lastId = arr[arr.length - 1];\n        asyncFocusRichText(page, lastId);\n      } else if (last) {\n        if (data.flavour === 'affine:bookmark') {\n          createBookmarkBlock(page.root?.lastItem() as BaseBlockModel);\n          return;\n        }\n        // add to end\n        let lastId = page.root?.lastItem()?.id;\n        models.forEach(model => {\n          lastId = page.addBlock(\n            model.flavour ?? 'affine:paragraph',\n            model,\n            page.root?.lastItem()\n          );\n        });\n        lastId && asyncFocusRichText(page, lastId);\n      }\n    },\n    onDrop: async (e, point, end, type) => {\n      const dataTransfer = e.dataTransfer;\n      assertExists(dataTransfer);\n      const data = dataTransfer.getData('affine/block-hub');\n      const models = [];\n      const props = JSON.parse(data);\n      const isDatabase = props.flavour === 'affine:database';\n      if (isDatabase && !page.awarenessStore.getFlag('enable_database')) {\n        console.warn('database block is not enabled');\n        return;\n      }\n      if (props.flavour === 'affine:embed' && props.type === 'image') {\n        models.push(...(await uploadImageFromLocal(page)));\n      } else {\n        models.push(props);\n      }\n\n      let parentId;\n      let focusId;\n      if (end && type !== 'none') {\n        const { model } = end;\n\n        page.captureSync();\n\n        if (type === 'database') {\n          const ids = page.addBlocks(models, model);\n          focusId = ids[0];\n          parentId = model.id;\n        } else if (props.flavour === 'affine:bookmark') {\n          const parent = page.getParent(model);\n          assertExists(parent);\n          const index = parent.children.indexOf(model);\n          focusId = createBookmarkBlock(parent, index + 1);\n          parentId = parent.id;\n        } else {\n          const parent = page.getParent(model);\n          assertExists(parent);\n          const ids = page.addSiblingBlocks(model, models, type);\n          focusId = ids[0];\n          parentId = parent.id;\n        }\n\n        // database init basic structure\n        if (isDatabase) {\n          const service = await getServiceOrRegister<'affine:database'>(\n            props.flavour\n          );\n          service.initDatabaseBlock(page, model, focusId);\n        }\n      }\n\n      if (editor.mode === 'page') {\n        if (focusId) {\n          asyncFocusRichText(page, focusId);\n          tryUpdateFrameSize(page, 1);\n        }\n        return;\n      }\n\n      // In edgeless mode.\n      const pageBlock = getEdgelessPage(page);\n      assertExists(pageBlock);\n\n      let frameId;\n      if (focusId && parentId) {\n        const targetFrameBlock = getClosestFrameBlockElementById(\n          parentId,\n          pageBlock\n        ) as BlockComponentElement;\n        assertExists(targetFrameBlock);\n        frameId = targetFrameBlock.model.id;\n      } else {\n        // Creates new frame block on blank area.\n        const result = pageBlock.addNewFrame(models, point);\n        frameId = result.frameId;\n        focusId = result.ids[0];\n      }\n      pageBlock.setSelection(frameId, true, focusId, point);\n    },\n    onDragStart: () => {\n      if (editor.mode === 'page') {\n        const defaultPageBlock = editor.querySelector('affine-default-page');\n        assertExists(defaultPageBlock);\n        defaultPageBlock.selection.clear();\n      }\n    },\n    getAllowedBlocks: () => {\n      if (editor.mode === 'page') {\n        const defaultPageBlock = editor.querySelector('affine-default-page');\n        assertExists(defaultPageBlock);\n        return getAllowSelectedBlocks(defaultPageBlock.model);\n      } else {\n        const edgelessPageBlock = editor.querySelector('affine-edgeless-page');\n        assertExists(edgelessPageBlock);\n        return getAllowSelectedBlocks(edgelessPageBlock.model);\n      }\n    },\n    getHoveringFrameState: (point: Point) => {\n      const state = {\n        scale: 1,\n      } as { container?: Element; rect?: Rect; scale: number };\n\n      if (editor.mode === 'page') {\n        const defaultPageBlock = editor.querySelector('affine-default-page');\n        assertExists(defaultPageBlock);\n        const rect = Rect.fromDOMRect(\n          defaultPageBlock.pageBlockContainer.getBoundingClientRect()\n        );\n        rect.height -= PAGE_BLOCK_PADDING_BOTTOM;\n        state.rect = rect;\n      } else {\n        const edgelessPageBlock = editor.querySelector('affine-edgeless-page');\n        assertExists(edgelessPageBlock);\n        state.scale = edgelessPageBlock.surface.viewport.zoom;\n        const container = getHoveringFrame(point);\n        if (container) {\n          state.rect = Rect.fromDOM(container);\n          state.container = container;\n        }\n      }\n      return state;\n    },\n    page,\n  });\n\n  return blockHub;\n};\n", "import {\n  type AbstractEditor,\n  activeEditorManager,\n  type DefaultPageBlockComponent,\n  type EdgelessPageBlockComponent,\n  edgelessPreset,\n  getPageBlock,\n  getServiceOrRegister,\n  type PageBlockModel,\n  pagePreset,\n  ThemeObserver,\n} from '@blocksuite/blocks';\nimport {\n  BlockSuiteRoot,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/lit';\nimport { isFirefox, type Page, Slot } from '@blocksuite/store';\nimport { html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { keyed } from 'lit/directives/keyed.js';\n\nimport { checkEditorElementActive, createBlockHub } from '../utils/editor.js';\n\nBlockSuiteRoot;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction forwardSlot<T extends Record<string, Slot<any>>>(\n  from: T,\n  to: Partial<T>\n) {\n  Object.entries(from).forEach(([key, slot]) => {\n    const target = to[key];\n    if (target) {\n      slot.pipe(target);\n    }\n  });\n}\n\n@customElement('editor-container')\nexport class EditorContainer\n  extends WithDisposable(ShadowlessElement)\n  implements AbstractEditor\n{\n  @property()\n  page!: Page;\n\n  @property()\n  mode: 'page' | 'edgeless' = 'page';\n\n  @property()\n  override autofocus = false;\n\n  @query('affine-default-page')\n  private _defaultPageBlock?: DefaultPageBlockComponent;\n\n  @query('affine-edgeless-page')\n  private _edgelessPageBlock?: EdgelessPageBlockComponent;\n\n  readonly themeObserver = new ThemeObserver();\n\n  get model(): PageBlockModel | null {\n    return this.page.root as PageBlockModel | null;\n  }\n\n  slots: AbstractEditor['slots'] = {\n    pageLinkClicked: new Slot(),\n    pageModeSwitched: new Slot(),\n  };\n\n  override connectedCallback() {\n    super.connectedCallback();\n    activeEditorManager.setIfNoActive(this);\n\n    const keydown = (e: KeyboardEvent) => {\n      if (e.altKey && e.metaKey && e.code === 'KeyC') {\n        e.preventDefault();\n      }\n\n      // `esc`  clear selection\n      if (e.code !== 'Escape') {\n        return;\n      }\n      const pageModel = this.model;\n      if (!pageModel) return;\n\n      if (this.mode === 'page') {\n        getPageBlock(pageModel)?.selection.clear();\n      }\n\n      const selection = getSelection();\n      if (!selection || selection.isCollapsed || !checkEditorElementActive()) {\n        return;\n      }\n      selection.removeAllRanges();\n    };\n\n    // Question: Why do we prevent this?\n    if (isFirefox) {\n      this._disposables.addFromEvent(document.body, 'keydown', keydown);\n    } else {\n      this._disposables.addFromEvent(window, 'keydown', keydown);\n    }\n\n    if (!this.page) {\n      throw new Error('Missing page for EditorContainer!');\n    }\n\n    // connect mouse mode event changes\n    // this._disposables.addFromEvent(\n    //   window,\n    //   'affine.switch-mouse-mode',\n    //   ({ detail }) => {\n    //     this.mouseMode = detail;\n    //   }\n    // );\n\n    // subscribe store\n    this._disposables.add(\n      this.page.slots.rootAdded.on(() => {\n        // add the 'page' as requesting property to\n        // make sure the `forwardSlot` is called in `updated` lifecycle\n        this.requestUpdate('page');\n      })\n    );\n    this._disposables.add(\n      this.page.slots.blockUpdated.on(async ({ type, id }) => {\n        const block = this.page.getBlockById(id);\n\n        if (!block) return;\n\n        if (type === 'update') {\n          const service = await getServiceOrRegister(block.flavour);\n          service.updateEffect(block);\n        }\n      })\n    );\n\n    this.themeObserver.observer(document.documentElement);\n    this._disposables.add(this.themeObserver);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    activeEditorManager.clearActive();\n    this.page.awarenessStore.setLocalRange(this.page, null);\n  }\n\n  override firstUpdated() {\n    // todo: refactor to a better solution\n    getServiceOrRegister('affine:code');\n    if (this.mode === 'page') {\n      setTimeout(() => {\n        const defaultPage = this.querySelector('affine-default-page');\n        if (this.autofocus) {\n          defaultPage?.titleVEditor.focusEnd();\n        }\n      });\n    }\n  }\n\n  override updated(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has('mode')) {\n      this.slots.pageModeSwitched.emit(this.mode);\n    }\n\n    if (!changedProperties.has('page') && !changedProperties.has('mode')) {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      if (this._defaultPageBlock) {\n        forwardSlot(this._defaultPageBlock.slots, this.slots);\n      }\n      if (this._edgelessPageBlock) {\n        forwardSlot(this._edgelessPageBlock.slots, this.slots);\n      }\n    });\n  }\n\n  async createBlockHub() {\n    await this.updateComplete;\n    if (!this.page.root) {\n      await new Promise(res => this.page.slots.rootAdded.once(res));\n    }\n    return createBlockHub(this, this.page);\n  }\n\n  override render() {\n    if (!this.model) return null;\n\n    const rootContainer = keyed(\n      this.model.id,\n      html`<block-suite-root\n        .page=${this.page}\n        .componentMap=${this.mode === 'page' ? pagePreset : edgelessPreset}\n      ></block-suite-root>`\n    );\n\n    const remoteSelectionContainer = html`\n      <remote-selection .page=${this.page}></remote-selection>\n    `;\n\n    return html`\n      <style>\n        editor-container * {\n          box-sizing: border-box;\n        }\n        editor-container,\n        .affine-editor-container {\n          display: block;\n          height: 100%;\n          position: relative;\n          overflow: hidden;\n          font-family: var(--affine-font-family);\n          background: var(--affine-background-primary-color);\n        }\n        @media print {\n          editor-container,\n          .affine-editor-container {\n            height: auto;\n          }\n        }\n      </style>\n      ${rootContainer} ${remoteSelectionContainer}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'editor-container': EditorContainer;\n  }\n}\n", "/// <reference types=\"@blocksuite/global\" />\n// Import models only, the bundled file should not include anything else.\nimport type { BlockSchema } from '@blocksuite/store';\nimport type { z } from 'zod';\n\nimport type { BookmarkBlockModel } from './bookmark-block/bookmark-model.js';\nimport { BookmarkBlockSchema } from './bookmark-block/bookmark-model.js';\nimport {\n  type CodeBlockModel,\n  CodeBlockSchema,\n} from './code-block/code-model.js';\nimport type { DatabaseBlockModel } from './database-block/database-model.js';\nimport { DatabaseBlockSchema } from './database-block/database-model.js';\nimport type { DividerBlockModel } from './divider-block/divider-model.js';\nimport { DividerBlockSchema } from './divider-block/divider-model.js';\nimport type { EmbedBlockModel } from './embed-block/embed-model.js';\nimport { EmbedBlockSchema } from './embed-block/embed-model.js';\nimport type { FrameBlockModel } from './frame-block/frame-model.js';\nimport { FrameBlockSchema } from './frame-block/frame-model.js';\nimport type { ListBlockModel } from './list-block/list-model.js';\nimport { ListBlockSchema } from './list-block/list-model.js';\nimport type { PageBlockModel } from './page-block/page-model.js';\nimport { PageBlockSchema } from './page-block/page-model.js';\nimport type { ParagraphBlockModel } from './paragraph-block/paragraph-model.js';\nimport { ParagraphBlockSchema } from './paragraph-block/paragraph-model.js';\nimport type { SurfaceBlockModel } from './surface-block/surface-model.js';\nimport { SurfaceBlockSchema } from './surface-block/surface-model.js';\n\nexport type {\n  BookmarkBlockModel,\n  CodeBlockModel,\n  DatabaseBlockModel,\n  DividerBlockModel,\n  EmbedBlockModel,\n  FrameBlockModel,\n  ListBlockModel,\n  PageBlockModel,\n  ParagraphBlockModel,\n  SurfaceBlockModel,\n};\n\n/** Built-in first party block models built for affine */\nexport const AffineSchemas: z.infer<typeof BlockSchema>[] = [\n  CodeBlockSchema,\n  ParagraphBlockSchema,\n  PageBlockSchema,\n  ListBlockSchema,\n  FrameBlockSchema,\n  DividerBlockSchema,\n  EmbedBlockSchema,\n  SurfaceBlockSchema,\n  BookmarkBlockSchema,\n  // DatabaseBlockSchema,\n];\n\nexport const __unstableSchemas = [DatabaseBlockSchema] satisfies z.infer<\n  typeof BlockSchema\n>[];\n\n// TODO support dynamic register\nexport type BlockSchemas = {\n  'affine:code': CodeBlockModel;\n  'affine:paragraph': ParagraphBlockModel;\n  'affine:page': PageBlockModel;\n  'affine:list': ListBlockModel;\n  'affine:frame': FrameBlockModel;\n  'affine:divider': DividerBlockModel;\n  'affine:embed': EmbedBlockModel;\n  'affine:surface': SurfaceBlockModel;\n  'affine:database': DatabaseBlockModel;\n  'affine:bookmark': BookmarkBlockModel;\n};\n\nexport type Flavour = keyof BlockSchemas;\n", "import { AffineSchemas } from '@blocksuite/blocks/models';\nimport type { Page } from '@blocksuite/store';\nimport { Workspace } from '@blocksuite/store';\nimport { LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { EditorContainer } from './editor-container.js';\n\n/**\n * This is the editor component to be used out-of-the-box.\n * It always starts with an empty local page state,\n * so it doesn't enable the opt-in collaboration and data persistence features.\n * But it's already self-contained and sufficient for embedded use in regular web applications.\n * You can use `editor.importMarkdown` to load markdown content.\n */\n@customElement('simple-affine-editor')\nexport class SimpleAffineEditor extends LitElement {\n  readonly workspace: Workspace;\n  readonly page: Page;\n\n  constructor() {\n    super();\n\n    this.workspace = new Workspace({ id: 'test' }).register(AffineSchemas);\n    this.page = this.workspace.createPage({ id: 'page0' });\n\n    const pageBlockId = this.page.addBlock('affine:page');\n    const frameId = this.page.addBlock('affine:frame', {}, pageBlockId);\n    this.page.addBlock('affine:paragraph', {}, frameId);\n  }\n\n  override connectedCallback() {\n    const editor = new EditorContainer();\n    editor.page = this.page;\n    this.appendChild(editor);\n  }\n\n  override disconnectedCallback() {\n    this.removeChild(this.children[0]);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-affine-editor': SimpleAffineEditor;\n  }\n}\n", "export * from './components/index.js';\nexport * from './utils/index.js';\n\nconst env =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n    ? window\n    : // @ts-ignore\n    typeof global !== 'undefined'\n    ? // @ts-ignore\n      global\n    : {};\nconst importIdentifier = '__ $BLOCKSUITE_EDITOR$ __';\n\n// @ts-ignore\nif (env[importIdentifier] === true) {\n  // https://github.com/yjs/yjs/issues/438\n  console.error(\n    '@blocksuite/editor was already imported. This breaks constructor checks and will lead to issues!'\n  );\n}\n\nif (typeof window === 'undefined') {\n  throw new Error(\n    'Seems like you are importing @blocksuite/editor in SSR mode. Which is not supported for now.'\n  );\n}\n\n// @ts-ignore\nenv[importIdentifier] = true;\n"],
  "mappings": "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",
  "names": ["_a", "EditorContainer", "SimpleAffineEditor", "__decorate"]
}
