// related component
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ShadowlessElement, WithDisposable } from '@blocksuite/lit';
import { css } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import { html } from 'lit/static-html.js';
import {} from '../../__internal__/index.js';
const styles = css `
  affine-database-kanban {
    position: relative;
  }
`;
let DatabaseKanban = class DatabaseKanban extends WithDisposable(ShadowlessElement) {
    constructor() {
        super(...arguments);
        this.flavour = 'affine:database';
    }
    get slots() {
        return this.host.slots;
    }
    get page() {
        return this.host.page;
    }
    get clipboard() {
        return this.host.clipboard;
    }
    get getService() {
        return this.host.getService;
    }
    connectedCallback() {
        super.connectedCallback();
    }
    render() {
        return html `<div class="affine-database-kanban">kanban view</div>`;
    }
};
DatabaseKanban.styles = styles;
__decorate([
    property()
], DatabaseKanban.prototype, "model", void 0);
__decorate([
    property()
], DatabaseKanban.prototype, "host", void 0);
DatabaseKanban = __decorate([
    customElement('affine-database-kanban')
], DatabaseKanban);
export { DatabaseKanban };
//# sourceMappingURL=kanban-view.js.map