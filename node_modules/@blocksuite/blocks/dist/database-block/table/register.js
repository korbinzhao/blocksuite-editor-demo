var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { ShadowlessElement, WithDisposable } from '@blocksuite/lit';
import { property } from 'lit/decorators.js';
export class TableViewCell extends ShadowlessElement {
}
export class DatabaseCellElement extends WithDisposable(ShadowlessElement) {
    constructor() {
        super(...arguments);
        this.cell = null;
    }
}
__decorate([
    property()
], DatabaseCellElement.prototype, "rowHost", void 0);
__decorate([
    property()
], DatabaseCellElement.prototype, "databaseModel", void 0);
__decorate([
    property()
], DatabaseCellElement.prototype, "rowModel", void 0);
__decorate([
    property()
], DatabaseCellElement.prototype, "column", void 0);
__decorate([
    property()
], DatabaseCellElement.prototype, "cell", void 0);
export function defineColumnRenderer(type, propertyCreator, defaultValue, components, config) {
    return {
        displayName: config.displayName,
        type,
        propertyCreator,
        components,
        defaultValue,
    };
}
export class ColumnRendererHelper {
    constructor() {
        this._columns = new Map();
    }
    register(renderer) {
        const columns = this._columns;
        if (columns.has(renderer.type)) {
            throw new Error('cannot register twice for ' + renderer.type);
        }
        columns.set(renderer.type, renderer);
    }
    get(type) {
        const renderer = this._columns.get(type);
        if (!renderer) {
            throw new Error('cannot find renderer');
        }
        return renderer;
    }
    list() {
        return [...this._columns.values()];
    }
}
//# sourceMappingURL=register.js.map