import { LitElement } from 'lit';
import type { DatabaseBlockModel } from '../../../database-model.js';
import type { ColumnRendererHelper } from '../../register.js';
import type { Column } from '../../types.js';
import type { ColumnInsertPosition } from '../../types.js';
export declare class EditColumnPopup extends LitElement {
    static styles: import("lit").CSSResult;
    targetModel: DatabaseBlockModel;
    columnRenderer: ColumnRendererHelper;
    targetColumn: Column | string;
    /** base on database column index */
    columnIndex: number;
    closePopup: () => void;
    setTitleColumnEditId: (columnId: string) => void;
    insertColumn: (position: ColumnInsertPosition) => void;
    titleInput: HTMLInputElement;
    private _container;
    private _columnTypePopup;
    private _onShowColumnType;
    private _onHideColumnType;
    private _changeColumnType;
    private _onActionClick;
    private _renderActions;
    protected render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-database-edit-column-popup': EditColumnPopup;
    }
}
//# sourceMappingURL=edit-column-popup.d.ts.map