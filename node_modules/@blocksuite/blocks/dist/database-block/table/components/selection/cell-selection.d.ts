import { LitElement } from 'lit';
import type { DatabaseTableViewCellSelect } from '../../../../std.js';
type SelectionState = Pick<DatabaseTableViewCellSelect, 'databaseId' | 'coords'>;
declare const CellLevelSelection_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class CellLevelSelection extends CellLevelSelection_base {
    static styles: import("lit").CSSResult;
    cell: HTMLElement;
    state: SelectionState | null;
    setSelection: (state: SelectionState) => void;
    clearSelection: () => void;
    private get _zoom();
    private _getStyles;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'database-cell-level-selection': CellLevelSelection;
    }
}
export {};
//# sourceMappingURL=cell-selection.d.ts.map