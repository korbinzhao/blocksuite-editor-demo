import { ShadowlessElement } from '@blocksuite/lit';
import type { DatabaseBlockModel } from '../../../database-model.js';
import type { ColumnRendererHelper } from '../../register.js';
import type { Column } from '../../types.js';
declare const DatabaseColumnHeader_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class DatabaseColumnHeader extends DatabaseColumnHeader_base {
    static styles: import("lit").CSSResult;
    targetModel: DatabaseBlockModel;
    columns: Column[];
    addColumn: (index: number) => string;
    columnRenderer: ColumnRendererHelper;
    get tableContainer(): HTMLElement;
    private _editingColumnId;
    private _changingColumnTypeId;
    private _titleColumnInput;
    private _headerContainer;
    private _addColumnButton;
    private _headerAddColumnButton;
    private _widthChangingIndex;
    private _columnWidthDisposables;
    private _columnMoveDisposables;
    private _isHeaderHover;
    private _indicator;
    private _editingColumnPopupIndex;
    private get readonly();
    setEditingColumnId: (id: string) => void;
    firstUpdated(): void;
    updated(changedProperties: Map<string, unknown>): void;
    disconnectedCallback(): void;
    private _initResizeEffect;
    private _initSetDragHandleHeightEffect;
    private _setDragHandleHeight;
    private _initHeaderMousemoveHandlers;
    showAddColumnButton: (event?: MouseEvent) => void;
    private _setChangingColumnIndex;
    private _initChangeColumnWidthHandlers;
    private _initMoveColumnHandlers;
    private _onShowEditColumnPopup;
    private _onShowColumnTypePopup;
    private _onKeydown;
    private _saveColumnTitle;
    private _onUpdateTitleColumn;
    private _onUpdateNormalColumn;
    private _onEditColumnTitle;
    private _onAddColumn;
    render(): import("lit").TemplateResult;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-database-column-header': DatabaseColumnHeader;
    }
}
export {};
//# sourceMappingURL=column-header.d.ts.map