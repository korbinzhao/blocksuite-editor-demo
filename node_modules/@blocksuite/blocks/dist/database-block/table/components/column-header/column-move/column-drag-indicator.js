var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { css, html, LitElement } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import { styleMap } from 'lit/directives/style-map.js';
let ColumnDragIndicator = class ColumnDragIndicator extends LitElement {
    constructor() {
        super(...arguments);
        this.targetRect = null;
        this.scale = 1;
    }
    render() {
        if (!this.targetRect) {
            return null;
        }
        const rect = this.targetRect;
        const style = styleMap({
            width: `${3 * this.scale}px`,
            height: `${rect.height}px`,
            transform: `translate(${rect.left}px, ${rect.top}px)`,
        });
        return html `
      <div class="affine-database-column-drag-indicator" style=${style}></div>
    `;
    }
};
ColumnDragIndicator.styles = css `
    .affine-database-column-drag-indicator {
      position: fixed;
      z-index: 10;
      top: 0;
      left: 0;
      background: var(--affine-primary-color);
      transition-property: width, transform;
      transition-duration: 100ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-delay: 0s;
      pointer-events: none;
    }
  `;
__decorate([
    property()
], ColumnDragIndicator.prototype, "targetRect", void 0);
__decorate([
    property()
], ColumnDragIndicator.prototype, "scale", void 0);
ColumnDragIndicator = __decorate([
    customElement('affine-database-column-drag-indicator')
], ColumnDragIndicator);
export { ColumnDragIndicator };
//# sourceMappingURL=column-drag-indicator.js.map