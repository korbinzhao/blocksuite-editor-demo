import './select-option.js';
import { DatabaseCellElement, type TableViewCell } from '../../../register.js';
import type { SelectTag } from '../../../types.js';
import { SelectMode } from '../../../types.js';
export declare class SelectCellEditing extends DatabaseCellElement<SelectTag[]> implements TableViewCell {
    value: SelectTag | undefined;
    static styles: import("lit").CSSResult;
    static tag: import("lit/static-html.js").StaticValue;
    cellType: "select";
    mode: SelectMode;
    private _selectInput;
    private _inputValue;
    private _editingIndex;
    private _selectedOptionIndex;
    private _selectOptionContainer;
    private _selectColor;
    get isSingleMode(): boolean;
    get selectionList(): SelectTag[];
    protected firstUpdated(): void;
    connectedCallback(): void;
    protected updated(_changedProperties: Map<PropertyKey, unknown>): void;
    private _onSelectOption;
    private _selectCell;
    private _onDeleteSelected;
    private _onSelectSearchInput;
    private _onSelectOrAdd;
    private _onSelect;
    private _onAddSelection;
    private _calcRowHostHeight;
    private _onSelectAction;
    private _showSelectAction;
    private _onSaveSelectionName;
    private _setEditingIndex;
    render(): import("lit").TemplateResult;
}
//# sourceMappingURL=select-cell-editing.d.ts.map