import './toolbar-action-popup.js';
import { ShadowlessElement } from '@blocksuite/lit';
import type { DatabaseBlockModel } from '../../../database-model.js';
import { SearchState } from '../../types.js';
declare const DatabaseToolbar_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class DatabaseToolbar extends DatabaseToolbar_base {
    static styles: import("lit").CSSResult;
    targetModel: DatabaseBlockModel;
    hoverState: boolean;
    searchState: SearchState;
    addRow: (index?: number) => void;
    setSearchState: (state: SearchState) => void;
    setFilteredRowIds: (rowIds: string[]) => void;
    private _searchInput;
    private _moreActionContainer;
    private _searchContainer;
    private _newRecord;
    private _toolbarAction;
    private _recordAddDisposables;
    private get readonly();
    firstUpdated(): void;
    updated(changedProperties: Map<string, unknown>): void;
    private _initAddRecordHandlers;
    private get _databaseMap();
    private _onSearch;
    private _onSearchKeydown;
    private _clearSearch;
    private _onShowSearch;
    private _onFocusSearchInput;
    private _onShowAction;
    private _closeToolbarAction;
    private _resetSearchStatus;
    private _onAddNewRecord;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-database-toolbar': DatabaseToolbar;
    }
}
export {};
//# sourceMappingURL=toolbar.d.ts.map