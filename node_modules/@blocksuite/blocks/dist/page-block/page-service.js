import { assertExists } from '@blocksuite/store';
import { getService } from '../__internal__/service.js';
import { BaseService } from '../__internal__/service/index.js';
export class PageBlockService extends BaseService {
    block2html(block, { childText = '', begin, end } = {}) {
        return `<div>${block.title.toString()}${childText}</div>`;
    }
    block2Text(block, { childText = '', begin, end } = {}) {
        const text = (block.title.toString() || '').slice(begin || 0, end);
        return `${text}${childText}`;
    }
    // todo we don't support link and database in page block title
    _getAllSubTexts(block) {
        if (block.flavour === 'affine:database') {
            return [];
        }
        const texts = (block.text || []).filter(text => !text.attributes?.link);
        if (block.children) {
            block.children.forEach(child => {
                texts.push(...this._getAllSubTexts(child));
            });
        }
        return texts;
    }
    async json2Block(focusedBlockModel, pastedBlocks) {
        if (pastedBlocks.length > 0 &&
            (pastedBlocks[0].children.length === 0 ||
                pastedBlocks[0].flavour === 'affine:page')) {
            const titles = this._getAllSubTexts(pastedBlocks[0]);
            focusedBlockModel.title.applyDelta(titles);
            pastedBlocks = pastedBlocks.slice(1);
        }
        // this is page block empty case
        const frameId = focusedBlockModel.page.addBlock('affine:frame', {}, focusedBlockModel.id);
        const frameModel = focusedBlockModel.page.getBlockById(frameId);
        assertExists(frameModel);
        const service = getService('affine:frame');
        return service.json2Block(frameModel, pastedBlocks);
        // TODO: if page is not empty
    }
}
//# sourceMappingURL=page-service.js.map