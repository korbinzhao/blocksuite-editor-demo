import type { PointerEventState } from '@blocksuite/lit';
import { type Page } from '@blocksuite/store';
import type { BlockComponentElement, IPoint } from '../../../__internal__/index.js';
import type { DefaultSelectionSlots } from '../default-page-block.js';
import type { DefaultSelectionManager, PageSelectionState } from './index.js';
export declare function filterBlocksExcludeSubtrees(blockCache: Map<BlockComponentElement, DOMRect>, bound: DOMRect, offset: IPoint): {
    block: BlockComponentElement;
    index: number;
}[];
export declare function updateLocalSelectionRange(page: Page): void;
export declare function setSelectedBlocks(state: PageSelectionState, slots: DefaultSelectionSlots, selectedBlocks: BlockComponentElement[], rects?: DOMRect[]): void;
export interface AutoScrollHooks {
    init(): void;
    onMove(): void;
    onScroll(val: number): void;
}
export declare function autoScroll(selection: DefaultSelectionManager, e: PointerEventState, hooks: AutoScrollHooks): void;
//# sourceMappingURL=utils.d.ts.map