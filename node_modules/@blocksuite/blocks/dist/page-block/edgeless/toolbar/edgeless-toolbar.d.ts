import '../components/tool-icon-button.js';
import './shape-tool/shape-tool-button.js';
import './brush-tool/brush-tool-button.js';
import './connector-tool/connector-tool-button.js';
import { LitElement } from 'lit';
import { type MouseMode } from '../../../__internal__/index.js';
import type { EdgelessPageBlockComponent } from '../edgeless-page-block.js';
export type ZoomAction = 'fit' | 'out' | 'reset' | 'in';
declare const EdgelessToolbar_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class EdgelessToolbar extends EdgelessToolbar_base {
    static styles: import("lit").CSSResult;
    edgeless: EdgelessPageBlockComponent;
    constructor(edgeless: EdgelessPageBlockComponent);
    get mouseMode(): MouseMode;
    get zoom(): number;
    private _imageLoading;
    private _rafId;
    private _setCenter;
    private _setZoom;
    private _setZoomByStep;
    private _smoothZoom;
    private _cutoff;
    private _zoomToFit;
    private _smoothTranslate;
    private _addImage;
    setMouseMode: (mouseMode: MouseMode) => void;
    setZoomByAction(action: ZoomAction): void;
    firstUpdated(): void;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-toolbar': EdgelessToolbar;
    }
}
export {};
//# sourceMappingURL=edgeless-toolbar.d.ts.map