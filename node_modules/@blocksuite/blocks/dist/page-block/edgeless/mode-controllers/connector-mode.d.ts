import type { PointerEventState } from '@blocksuite/lit';
import type { ConnectorMouseMode } from '../../../__internal__/index.js';
import type { SelectionArea } from '../selection-manager.js';
import { MouseModeController } from './index.js';
export declare class ConnectorModeController extends MouseModeController<ConnectorMouseMode> {
    readonly mouseMode: ConnectorMouseMode;
    private _draggingElementId;
    protected _draggingArea: SelectionArea | null;
    private _draggingStartElement;
    private _draggingStartRect;
    private _draggingStartPoint;
    private _pickBy;
    onContainerClick(e: PointerEventState): void;
    onContainerContextMenu(e: PointerEventState): void;
    onContainerDblClick(e: PointerEventState): void;
    onContainerTripleClick(e: PointerEventState): void;
    onContainerDragStart(e: PointerEventState): void;
    onContainerDragMove(e: PointerEventState): void;
    onContainerDragEnd(e: PointerEventState): void;
    onContainerMouseMove(e: PointerEventState): void;
    onContainerMouseOut(e: PointerEventState): void;
    onPressShiftKey(_: boolean): void;
}
//# sourceMappingURL=connector-mode.d.ts.map