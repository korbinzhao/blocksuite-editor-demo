import { noop } from '../../../__internal__/index.js';
import { MouseModeController } from './index.js';
export class PanModeController extends MouseModeController {
    constructor() {
        super(...arguments);
        this.mouseMode = {
            type: 'pan',
        };
        this._lastPoint = null;
    }
    onContainerClick(e) {
        noop();
    }
    onContainerContextMenu(e) {
        noop();
    }
    onContainerDblClick(e) {
        noop();
    }
    onContainerTripleClick(e) {
        noop();
    }
    onContainerDragStart(e) {
        if (!this._page.awarenessStore.getFlag('enable_surface'))
            return;
        this._lastPoint = [e.x, e.y];
        this._edgeless.slots.mouseModeUpdated.emit({ type: 'pan', panning: true });
    }
    onContainerDragMove(e) {
        if (!this._page.awarenessStore.getFlag('enable_surface'))
            return;
        if (!this._lastPoint)
            return;
        const { viewport } = this._edgeless.surface;
        const { zoom } = viewport;
        const [lastX, lastY] = this._lastPoint;
        const deltaX = lastX - e.x;
        const deltaY = lastY - e.y;
        this._lastPoint = [e.x, e.y];
        viewport.applyDeltaCenter(deltaX / zoom, deltaY / zoom);
        this._edgeless.slots.viewportUpdated.emit();
    }
    onContainerDragEnd() {
        this._lastPoint = null;
        this._edgeless.slots.mouseModeUpdated.emit({ type: 'pan', panning: false });
    }
    onContainerMouseMove(e) {
        noop();
    }
    onContainerMouseOut(e) {
        noop();
    }
    onPressShiftKey(_) {
        noop();
    }
}
//# sourceMappingURL=pan-mode.js.map