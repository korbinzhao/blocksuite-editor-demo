import {} from '../../../__internal__/index.js';
import { noop } from '../../../__internal__/index.js';
import { addNote, DEFAULT_FRAME_WIDTH } from '../utils.js';
import { MouseModeController } from './index.js';
export class NoteModeController extends MouseModeController {
    constructor() {
        super(...arguments);
        this.mouseMode = {
            type: 'note',
        };
        this._dragStartEvent = null;
    }
    _addNote(e, width = DEFAULT_FRAME_WIDTH) {
        addNote(this._edgeless, this._page, e, width);
    }
    onContainerClick(e) {
        this._addNote(e);
    }
    onContainerContextMenu(e) {
        noop();
    }
    onContainerDblClick(e) {
        noop();
    }
    onContainerTripleClick(e) {
        noop();
    }
    onContainerDragStart(e) {
        this._dragStartEvent = e;
        this._draggingArea = {
            start: new DOMPoint(e.x, e.y),
            end: new DOMPoint(e.x, e.y),
        };
    }
    onContainerDragMove(e) {
        if (this._draggingArea) {
            this._draggingArea.end = new DOMPoint(e.x, e.y);
            this._edgeless.slots.hoverUpdated.emit();
        }
    }
    onContainerDragEnd(e) {
        if (this._dragStartEvent) {
            const startEvent = e.x > this._dragStartEvent.x ? this._dragStartEvent : e;
            const width = Math.max(Math.abs(e.x - this._dragStartEvent.x), DEFAULT_FRAME_WIDTH);
            this._addNote(startEvent, width);
        }
        this._dragStartEvent = null;
        this._draggingArea = null;
    }
    onContainerMouseMove(e) {
        noop();
    }
    onContainerMouseOut(e) {
        noop();
    }
    onPressShiftKey(_) {
        noop();
    }
}
//# sourceMappingURL=note-mode.js.map