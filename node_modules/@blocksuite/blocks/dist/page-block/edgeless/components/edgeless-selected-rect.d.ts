import './component-toolbar/component-toolbar.js';
import { SurfaceManager } from '@blocksuite/phasor';
import { Page } from '@blocksuite/store';
import { LitElement, nothing } from 'lit';
import type { EdgelessSelectionSlots } from '../edgeless-page-block.js';
import type { EdgelessSelectionState } from '../selection-manager.js';
import { type ResizeMode } from './resize-handles.js';
declare const EdgelessSelectedRect_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class EdgelessSelectedRect extends EdgelessSelectedRect_base {
    static styles: import("lit").CSSResult;
    page: Page;
    surface: SurfaceManager;
    state: EdgelessSelectionState;
    slots: EdgelessSelectionSlots;
    private _selectedRect;
    private _componentToolbar?;
    private _componentToolbarPopper;
    private _lock;
    private _resizeManager;
    constructor();
    get zoom(): number;
    get resizeMode(): ResizeMode;
    private _onDragMove;
    private _onDragEnd;
    firstUpdated(): void;
    updated(changedProperties: Map<string, unknown>): void;
    render(): import("lit").TemplateResult<1> | typeof nothing;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-selected-rect': EdgelessSelectedRect;
    }
}
export {};
//# sourceMappingURL=edgeless-selected-rect.d.ts.map