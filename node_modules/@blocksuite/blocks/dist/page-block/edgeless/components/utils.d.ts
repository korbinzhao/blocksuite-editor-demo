import type { SurfaceViewport } from '@blocksuite/phasor';
import { Bound } from '@blocksuite/phasor';
import type { Disposable } from '@blocksuite/store';
import type { Selectable } from '../selection-manager.js';
export declare function getCommonRectStyle(rect: DOMRect, active?: boolean, selected?: boolean): {
    '--affine-border-width': string;
    left: string;
    top: string;
    width: string;
    height: string;
    backgroundColor: string;
};
export declare function getSelectedRect(selected: Selectable[], viewport: SurfaceViewport): DOMRect;
export declare function getSelectableBounds(selected: Selectable[]): Map<string, Bound>;
export declare function listenClickAway(element: HTMLElement, onClickAway: () => void): Disposable;
/**
 * Using attribute 'data-show' to control popper visibility.
 *
 * ```css
 * selector {
 *   display: none;
 * }
 * selector[data-show] {
 *   display: block;
 * }
 * ```
 */
export declare function createButtonPopper(reference: HTMLElement, popperElement: HTMLElement, stateUpdated?: (state: {
    display: 'show' | 'hidden';
}) => void): {
    popper: import("@popperjs/core/index.js").Instance;
    show: () => void;
    hide: () => void;
    toggle: () => void;
    dispose: () => void;
};
export declare function getTooltipWithShortcut(tip: string, shortcut: string): import("lit").TemplateResult<1>;
//# sourceMappingURL=utils.d.ts.map