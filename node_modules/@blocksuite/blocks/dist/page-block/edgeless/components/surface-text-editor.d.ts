import { ShadowlessElement } from '@blocksuite/lit';
import { type TextElement } from '@blocksuite/phasor';
import { VEditor } from '@blocksuite/virgo';
import type { EdgelessPageBlockComponent } from '../edgeless-page-block.js';
declare const SurfaceTextEditor_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class SurfaceTextEditor extends SurfaceTextEditor_base {
    private _virgoContainer;
    private _vEditor;
    private _element;
    private _edgeless;
    private _keeping;
    get vEditor(): VEditor<{
        bold?: true | undefined;
        italic?: true | undefined;
        underline?: true | undefined;
        strike?: true | undefined;
        code?: true | undefined;
        link?: string | undefined;
    }> | null;
    setKeeping(keeping: boolean): void;
    private _syncRect;
    mount(element: TextElement, edgeless: EdgelessPageBlockComponent): void;
    private _unmount;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'surface-text-editor': SurfaceTextEditor;
    }
}
export {};
//# sourceMappingURL=surface-text-editor.d.ts.map