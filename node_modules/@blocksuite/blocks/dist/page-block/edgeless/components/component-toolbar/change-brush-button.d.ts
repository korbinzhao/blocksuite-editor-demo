import '../tool-icon-button.js';
import '../color-panel.js';
import type { BrushElement, SurfaceManager } from '@blocksuite/phasor';
import type { Page } from '@blocksuite/store';
import { LitElement } from 'lit';
import type { EdgelessSelectionSlots } from '../../edgeless-page-block.js';
import type { EdgelessSelectionState } from '../../selection-manager.js';
declare const EdgelessChangeBrushButton_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class EdgelessChangeBrushButton extends EdgelessChangeBrushButton_base {
    static styles: import("lit").CSSResult;
    elements: BrushElement[];
    selectionState: EdgelessSelectionState;
    page: Page;
    surface: SurfaceManager;
    slots: EdgelessSelectionSlots;
    private _popperShow;
    private _colorPanel;
    private _colorPanelPopper;
    private _setBrushSize;
    private _setBrushColor;
    firstUpdated(changedProperties: Map<string, unknown>): void;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-change-brush-button': EdgelessChangeBrushButton;
    }
}
export {};
//# sourceMappingURL=change-brush-button.d.ts.map