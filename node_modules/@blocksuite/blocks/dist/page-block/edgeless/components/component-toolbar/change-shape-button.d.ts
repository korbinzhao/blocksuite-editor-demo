import '../tool-icon-button.js';
import '../color-panel.js';
import '../../toolbar/shape-tool/shape-menu.js';
import { type ShapeElement, type SurfaceManager } from '@blocksuite/phasor';
import type { Page } from '@blocksuite/store';
import { LitElement } from 'lit';
import type { EdgelessSelectionSlots } from '../../edgeless-page-block.js';
import type { EdgelessSelectionState } from '../../selection-manager.js';
export declare const DEFAULT_SHAPE_FILL_COLOR: string;
export declare const DEFAULT_SHAPE_STROKE_COLOR: string;
declare const EdgelessChangeShapeButton_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class EdgelessChangeShapeButton extends EdgelessChangeShapeButton_base {
    static styles: (import("lit").CSSResult | import("lit").CSSResult[] | import("lit").CSSResult[][])[];
    elements: ShapeElement[];
    page: Page;
    surface: SurfaceManager;
    selectionState: EdgelessSelectionState;
    slots: EdgelessSelectionSlots;
    private _popperShow;
    private _changeShapeButton;
    private _shapeMenu;
    private _shapeMenuPopper;
    private _fillColorButton;
    private _fillColorMenu;
    private _fillColorMenuPopper;
    private _strokeColorButton;
    private _strokeColorMenu;
    private _strokeColorMenuPopper;
    private _lineStylesButton;
    private _lineStylesPanel;
    private _lineStylesPanelPopper;
    private _forceUpdateSelection;
    private _setShapeFillColor;
    private _setShapeStrokeColor;
    private _setShapeStrokeWidth;
    private _setShapeStrokeStyle;
    private _setShapeStyles;
    firstUpdated(changedProperties: Map<string, unknown>): void;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-change-shape-button': EdgelessChangeShapeButton;
    }
}
export {};
//# sourceMappingURL=change-shape-button.d.ts.map