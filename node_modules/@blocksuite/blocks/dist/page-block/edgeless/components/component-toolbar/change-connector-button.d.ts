import '../tool-icon-button.js';
import '../color-panel.js';
import type { ConnectorElement, SurfaceManager } from '@blocksuite/phasor';
import type { Page } from '@blocksuite/store';
import { LitElement } from 'lit';
import type { EdgelessSelectionSlots } from '../../edgeless-page-block.js';
import type { EdgelessSelectionState } from '../../selection-manager.js';
export declare class EdgelessChangeConnectorButton extends LitElement {
    static styles: (import("lit").CSSResult | import("lit").CSSResult[] | import("lit").CSSResult[][])[];
    elements: ConnectorElement[];
    selectionState: EdgelessSelectionState;
    page: Page;
    surface: SurfaceManager;
    slots: EdgelessSelectionSlots;
    private _colorButton;
    private _colorPanel;
    private _colorPanelPopper;
    private _disposables;
    private _lineStylesButton;
    private _lineStylesPanel;
    private _lineStylesPanelPopper;
    private _popperShow;
    private _forceUpdateSelection;
    private _setConnectorMode;
    private _setConnectorColor;
    private _setShapeStrokeWidth;
    private _setShapeStrokeStyle;
    private _setShapeStyles;
    firstUpdated(changedProperties: Map<string, unknown>): void;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-change-connector-button': EdgelessChangeConnectorButton;
    }
}
//# sourceMappingURL=change-connector-button.d.ts.map