import '../tool-icon-button.js';
import './change-shape-button.js';
import './change-brush-button.js';
import './change-connector-button.js';
import './change-frame-button.js';
import './change-text-button.js';
import './more-button.js';
import type { SurfaceManager } from '@blocksuite/phasor';
import type { Page } from '@blocksuite/store';
import { LitElement } from 'lit';
import type { EdgelessSelectionSlots } from '../../edgeless-page-block.js';
import type { EdgelessSelectionState } from '../../selection-manager.js';
import type { Selectable } from '../../selection-manager.js';
export declare class EdgelessComponentToolbar extends LitElement {
    static styles: import("lit").CSSResult;
    selected: Selectable[];
    selectionState: EdgelessSelectionState;
    page: Page;
    surface: SurfaceManager;
    slots: EdgelessSelectionSlots;
    private _groupSelected;
    private _getShapeButton;
    private _getBrushButton;
    private _getConnectorButton;
    private _getFrameButton;
    private _getTextButton;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'edgeless-component-toolbar': EdgelessComponentToolbar;
    }
}
//# sourceMappingURL=component-toolbar.d.ts.map