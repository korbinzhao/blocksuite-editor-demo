import './components/bookmark-toolbar.js';
import './components/bookmark-edit-modal.js';
import './components/bookmark-create-modal.js';
import './components/loader.js';
import { BlockElement } from '@blocksuite/lit';
import { Slot } from '@blocksuite/store';
import { nothing } from 'lit';
import type { BookmarkBlockModel } from './bookmark-model.js';
export declare class BookmarkBlockComponent extends BlockElement<BookmarkBlockModel> {
    static styles: import("lit").CSSResult;
    slots: {
        openInitialModal: Slot<void>;
    };
    _input: HTMLInputElement;
    private _showCreateModal;
    private _showToolbar;
    private _showEditModal;
    private _caption;
    private _isLoading;
    private _timer;
    set loading(value: boolean);
    get loading(): boolean;
    firstUpdated(): void;
    connectedCallback(): void;
    private _onInputChange;
    private _onInputBlur;
    private _onHover;
    private _onHoverOut;
    private _onToolbarSelected;
    render(): import("lit").TemplateResult<1> | typeof nothing;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-bookmark': BookmarkBlockComponent;
    }
}
//# sourceMappingURL=bookmark-block.d.ts.map