import '../../components/button.js';
import '../../components/portal.js';
import '../../components/button.js';
import { type BaseBlockModel } from '@blocksuite/store';
import { LitElement } from 'lit';
import type { BookmarkBlockModel } from '../bookmark-model.js';
export declare const bookmarkModalStyles: import("lit").TemplateResult<1>;
declare const BookmarkEditModal_base: typeof LitElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class BookmarkEditModal extends BookmarkEditModal_base {
    model: BaseBlockModel<BookmarkBlockModel>;
    onCancel?: () => void;
    onConfirm?: () => void;
    get id(): string;
    connectedCallback(): void;
    disconnectedCallback(): void;
    private _modalKeyboardListener;
    private _onConfirm;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'bookmark-edit-modal': BookmarkEditModal;
    }
}
export {};
//# sourceMappingURL=bookmark-edit-modal.d.ts.map