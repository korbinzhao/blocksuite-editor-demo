import './placeholder/loading-card.js';
import './placeholder/image-not-found.js';
import { ShadowlessElement } from '@blocksuite/lit';
import type { EmbedBlockModel } from '../index.js';
declare const ImageBlockComponent_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class ImageBlockComponent extends ImageBlockComponent_base {
    static styles: import("lit").CSSResult;
    model: EmbedBlockModel;
    readonly resizeImg: HTMLElement;
    private _source;
    private _imageReady;
    static maxRetryCount: number;
    private _imageState;
    private _retryCount;
    firstUpdated(): Promise<void>;
    private _fetchError;
    private _fetchImage;
    connectedCallback(): void;
    disconnectedCallback(): void;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-image': ImageBlockComponent;
    }
}
export {};
//# sourceMappingURL=image-block.d.ts.map