import type { BaseBlockModel } from '@blocksuite/store';
import type { KeyboardBindings } from '../__internal__/rich-text/keyboard.js';
import type { AffineVEditor } from '../__internal__/rich-text/virgo/types.js';
import { BaseService } from '../__internal__/service/index.js';
import type { BlockRange, BlockTransformContext, SerializedBlock } from '../__internal__/utils/index.js';
import type { CodeBlockModel } from './code-model.js';
export declare class CodeBlockService extends BaseService<CodeBlockModel> {
    setLang(model: CodeBlockModel, lang: string | null): void;
    block2html(block: CodeBlockModel, { childText, begin, end }?: BlockTransformContext): string;
    json2Block(focusedBlockModel: BaseBlockModel, pastedBlocks: SerializedBlock[], range?: BlockRange): Promise<void>;
    defineKeymap(block: CodeBlockModel, virgo: AffineVEditor): KeyboardBindings;
}
//# sourceMappingURL=code-service.d.ts.map