var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { customElement, property } from 'lit/decorators.js';
/**
 * Renders a template into a portal. Defaults to `document.body`.
 *
 * @example
 * ```ts
 * render() {
 *   return html`${showPortal
 *     ? html`<affine-portal .template=${portalTemplate}></affine-portal>`
 *     : null}`;
 * };
 * ```
 */
let Portal = class Portal extends LitElement {
    constructor() {
        super(...arguments);
        this.container = document.body;
        this.template = html ``;
        this._portalRoot = null;
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this._portalRoot?.remove();
    }
    createRenderRoot() {
        const portalRoot = document.createElement('div');
        portalRoot.classList.add('affine-portal');
        this.container.append(portalRoot);
        this._portalRoot = portalRoot;
        return portalRoot;
    }
    render() {
        return this.template;
    }
};
__decorate([
    property()
], Portal.prototype, "container", void 0);
__decorate([
    property()
], Portal.prototype, "template", void 0);
Portal = __decorate([
    customElement('affine-portal')
], Portal);
export { Portal };
//# sourceMappingURL=portal.js.map