var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/// <reference types="vite/client" />
import { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT } from '@blocksuite/global/config';
import { BlockElement } from '@blocksuite/lit';
import { css, html } from 'lit';
import { customElement } from 'lit/decorators.js';
import { registerService } from '../__internal__/service.js';
import { DividerBlockService } from './divider-service.js';
let DividerBlockComponent = class DividerBlockComponent extends BlockElement {
    connectedCallback() {
        super.connectedCallback();
        registerService('affine:divider', DividerBlockService);
    }
    firstUpdated() {
        this.model.propsUpdated.on(() => this.requestUpdate());
        this.model.childrenUpdated.on(() => this.requestUpdate());
    }
    render() {
        const children = html `<div
      class="affine-block-children-container"
      style="padding-left: ${BLOCK_CHILDREN_CONTAINER_PADDING_LEFT}px"
    >
      ${this.content}
    </div>`;
        return html `
      <div class=${`affine-divider-block-container`}>
        <hr />
        ${children}
      </div>
    `;
    }
};
DividerBlockComponent.styles = css `
    .affine-divider-block-container {
      width: 100%;
      height: 20px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      margin-top: calc(var(--affine-paragraph-space) + 8px);
      margin-bottom: calc(var(--affine-paragraph-space) + 8px);
    }
    hr {
      width: 100%;
    }
  `;
DividerBlockComponent = __decorate([
    customElement('affine-divider')
], DividerBlockComponent);
export { DividerBlockComponent };
//# sourceMappingURL=divider-block.js.map