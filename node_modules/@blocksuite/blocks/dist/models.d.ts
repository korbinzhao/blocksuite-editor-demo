import type { BlockSchema } from '@blocksuite/store';
import type { z } from 'zod';
import type { BookmarkBlockModel } from './bookmark-block/bookmark-model.js';
import { type CodeBlockModel } from './code-block/code-model.js';
import type { DatabaseBlockModel } from './database-block/database-model.js';
import type { DividerBlockModel } from './divider-block/divider-model.js';
import type { EmbedBlockModel } from './embed-block/embed-model.js';
import type { FrameBlockModel } from './frame-block/frame-model.js';
import type { ListBlockModel } from './list-block/list-model.js';
import type { PageBlockModel } from './page-block/page-model.js';
import type { ParagraphBlockModel } from './paragraph-block/paragraph-model.js';
import type { SurfaceBlockModel } from './surface-block/surface-model.js';
export type { BookmarkBlockModel, CodeBlockModel, DatabaseBlockModel, DividerBlockModel, EmbedBlockModel, FrameBlockModel, ListBlockModel, PageBlockModel, ParagraphBlockModel, SurfaceBlockModel, };
/** Built-in first party block models built for affine */
export declare const AffineSchemas: z.infer<typeof BlockSchema>[];
export declare const __unstableSchemas: {
    version: number;
    model: {
        role: "content" | "root" | "hub";
        props: import("@blocksuite/store").PropsGetter<import("./database-block/database-model.js").Props>;
        flavour: "affine:database";
    } & {
        role: "hub";
        version: number;
        tag: import("lit/static-html.js").StaticValue;
        parent: string[];
        children: string[];
    };
}[];
export type BlockSchemas = {
    'affine:code': CodeBlockModel;
    'affine:paragraph': ParagraphBlockModel;
    'affine:page': PageBlockModel;
    'affine:list': ListBlockModel;
    'affine:frame': FrameBlockModel;
    'affine:divider': DividerBlockModel;
    'affine:embed': EmbedBlockModel;
    'affine:surface': SurfaceBlockModel;
    'affine:database': DatabaseBlockModel;
    'affine:bookmark': BookmarkBlockModel;
};
export type Flavour = keyof BlockSchemas;
//# sourceMappingURL=models.d.ts.map