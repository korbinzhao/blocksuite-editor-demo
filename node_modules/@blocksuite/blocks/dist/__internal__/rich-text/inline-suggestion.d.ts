import type { BaseBlockModel, InlineSuggestionProvider } from '@blocksuite/store';
import { type LitElement, nothing, type ReactiveController } from 'lit';
import type { AffineVEditor } from './virgo/types.js';
export declare class InlineSuggestionController implements ReactiveController {
    static styles: import("lit").CSSResult;
    host: LitElement;
    private model?;
    private vEditor?;
    private provider?;
    private _abortController;
    private _disposables;
    private _suggestionState;
    constructor(host: LitElement);
    hostConnected(): void;
    hostDisconnected(): void;
    init({ model, vEditor, provider, }: {
        model: BaseBlockModel;
        vEditor: AffineVEditor;
        provider: InlineSuggestionProvider;
    }): void;
    private _setSuggestionState;
    private _updatePosition;
    readonly onFocusIn: (e: FocusEvent) => void;
    readonly onFocusOut: (e: FocusEvent) => void;
    private _updateSuggestions;
    readonly onKeyDown: (e: KeyboardEvent) => void;
    render(): import("lit").TemplateResult<1> | typeof nothing;
}
//# sourceMappingURL=inline-suggestion.d.ts.map