var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { customElement } from 'lit/decorators.js';
import { styleMap } from 'lit/directives/style-map.js';
let LinkMockSelection = class LinkMockSelection extends LitElement {
    constructor(rects) {
        super();
        this.rects = rects;
    }
    render() {
        return html `
      ${this.rects.map(rect => html `<div
          style="${styleMap({
            position: 'absolute',
            width: `${rect.width}px`,
            height: `${rect.height}px`,
            top: `${rect.top}px`,
            left: `${rect.left}px`,
            backgroundColor: 'rgba(35, 131, 226, 0.28)',
        })}"
        ></div>`)}
    `;
    }
};
LinkMockSelection = __decorate([
    customElement('link-mock-selection')
], LinkMockSelection);
export { LinkMockSelection };
//# sourceMappingURL=mock-selection.js.map