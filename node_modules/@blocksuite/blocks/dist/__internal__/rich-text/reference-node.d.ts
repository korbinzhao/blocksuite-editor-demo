import type { Slot } from '@blocksuite/global/utils';
import { ShadowlessElement } from '@blocksuite/lit';
import { type DeltaInsert } from '@blocksuite/virgo';
import type { AffineTextAttributes } from './virgo/types.js';
export declare const REFERENCE_NODE = " ";
export type RefNodeSlots = {
    pageLinkClicked: Slot<{
        pageId: string;
        blockId?: string;
    }>;
};
declare const AffineReference_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class AffineReference extends AffineReference_base {
    static styles: import("lit").CSSResult;
    delta: DeltaInsert<AffineTextAttributes>;
    private _refMeta?;
    private _refAttribute;
    connectedCallback(): void;
    private _updateRefMeta;
    private _onClick;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'affine-reference': AffineReference;
    }
}
export {};
//# sourceMappingURL=reference-node.d.ts.map