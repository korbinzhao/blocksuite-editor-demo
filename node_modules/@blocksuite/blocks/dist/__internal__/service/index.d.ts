import type { BaseBlockModel } from '@blocksuite/store';
import type { KeyboardBindings } from '../rich-text/keyboard.js';
import type { AffineVEditor } from '../rich-text/virgo/types.js';
import type { BlockRange, BlockTransformContext, SerializedBlock } from '../utils/index.js';
export declare class BaseService<BlockModel extends BaseBlockModel = BaseBlockModel> {
    block2html(block: BlockModel, { childText, begin, end }?: BlockTransformContext): string;
    block2Text(block: BlockModel, { childText, begin, end }?: BlockTransformContext): string;
    block2Json(block: BlockModel, begin?: number, end?: number): SerializedBlock;
    json2Block(focusedBlockModel: BlockModel, pastedBlocks: SerializedBlock[], range?: BlockRange): Promise<void>;
    onBlockPasted(model: BlockModel, clipboardData: Record<string, unknown>): Promise<void>;
    private static deltaLeaf2Html;
    /**
     * side effect when update block
     */
    updateEffect(block: BlockModel): Promise<void>;
    defineKeymap(block: BlockModel, virgo: AffineVEditor): KeyboardBindings;
}
//# sourceMappingURL=index.d.ts.map