import type { Page } from '@blocksuite/store';
import type { EdgelessPageBlockComponent } from '../../page-block/edgeless/edgeless-page-block.js';
import type { Selectable } from '../../page-block/edgeless/selection-manager.js';
import type { Clipboard } from './type.js';
export declare class EdgelessClipboard implements Clipboard {
    private _page;
    private _edgeless;
    constructor(page: Page, edgeless: EdgelessPageBlockComponent);
    init(page?: Page): void;
    get selection(): import("../../page-block/edgeless/selection-manager.js").EdgelessSelectionManager;
    get slots(): {
        viewportUpdated: import("@blocksuite/store").Slot<void>;
        selectedBlocksUpdated: import("@blocksuite/store").Slot<(import("../rich-text/rich-text.js").RichText | import("../../bookmark-block/components/bookmark-operation-popper.js").BookmarkOperationMenu | import("../../bookmark-block/components/bookmark-toolbar.js").BookmarkToolbar | import("../../bookmark-block/components/bookmark-edit-modal.js").BookmarkEditModal | import("../../bookmark-block/components/bookmark-create-modal.js").BookmarkCreateModal | import("../../index.js").BookmarkBlockComponent | import("../../index.js").ListBlockComponent | import("../../index.js").CodeBlockComponent | import("../../database-block/table/table-view.js").DatabaseTable | import("../../database-block/kanban/kanban-view.js").DatabaseKanban | import("../../index.js").DatabaseBlockComponent | import("../../index.js").DefaultPageBlockComponent | EdgelessPageBlockComponent | import("../../index.js").EmbedBlockComponent | import("../../index.js").ImageBlockComponent | import("../../index.js").DividerBlockComponent | import("../../index.js").ParagraphBlockComponent | import("../../index.js").FrameBlockComponent)[]>;
        selectionUpdated: import("@blocksuite/store").Slot<import("../../page-block/edgeless/selection-manager.js").EdgelessSelectionState>;
        hoverUpdated: import("@blocksuite/store").Slot<void>;
        surfaceUpdated: import("@blocksuite/store").Slot<void>;
        mouseModeUpdated: import("@blocksuite/store").Slot<import("../index.js").MouseMode>;
        reorderingFramesUpdated: import("@blocksuite/store").Slot<import("../index.js").ReorderingAction<Selectable>>;
        reorderingShapesUpdated: import("@blocksuite/store").Slot<import("../index.js").ReorderingAction<Selectable>>;
        zoomUpdated: import("@blocksuite/store").Slot<import("../../page-block/edgeless/toolbar/edgeless-toolbar.js").ZoomAction>;
        pressShiftKeyUpdated: import("@blocksuite/store").Slot<boolean>;
        subpageLinked: import("@blocksuite/store").Slot<{
            pageId: string;
        }>;
        subpageUnlinked: import("@blocksuite/store").Slot<{
            pageId: string;
        }>;
        pageLinkClicked: import("@blocksuite/store").Slot<{
            pageId: string;
            blockId?: string | undefined;
        }>;
    };
    get surface(): import("@blocksuite/phasor").SurfaceManager;
    dispose(): void;
    private _onCut;
    private _onCopy;
    private _onPaste;
    private _pasteInTextFrame;
    private _createPhasorElements;
    private _createFrameBlocks;
    private _getOldCommonBound;
    private _emitSelectionChangeAfterPaste;
    private _pasteShapesAndFrames;
}
//# sourceMappingURL=edgeless-clipboard.d.ts.map