import type { Page } from '@blocksuite/store';
import type { SerializedBlock } from '../utils/index.js';
import type { ContentParser } from './index.js';
export type FetchFileHandler = (fileName: string) => Promise<Blob | null | undefined>;
export type TextStyleHandler = (element: HTMLElement, styles: Record<string, unknown>) => void;
export type TableParserHandler = (element: Element) => Promise<SerializedBlock[] | null>;
export declare class HtmlParser {
    private _contentParser;
    private _page;
    private _customFetchFileHandler?;
    private _customTextStyleHandler?;
    private _customTableParserHandler?;
    constructor(contentParser: ContentParser, page: Page, fetchFileHandler?: FetchFileHandler, textStyleHandler?: TextStyleHandler, tableParserHandler?: TableParserHandler);
    private _fetchFileHandler;
    registerParsers(): void;
    private _nodeParser;
    private _commonParser;
    private _commonHTML2Block;
    private _commonHTML2Text;
    private _listItemParser;
    private _blockQuoteParser;
    private _codeBlockParser;
    private _embedItemParser;
    private _tableParser;
    private _headerParser;
}
//# sourceMappingURL=parse-html.d.ts.map