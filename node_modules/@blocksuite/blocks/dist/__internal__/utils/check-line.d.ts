/**
 * It will return the next range if the cursor is at the edge of the block, otherwise return false.
 *
 * We should determine if the cursor is at the edge of the block, since a cursor at edge may have two cursor points
 * but only one bounding rect.
 * If a cursor is at the edge of a block, its previous cursor rect will not equal to the next one.
 *
 * See the following example:
 * ```markdown
 * long text| <- `range.getBoundingClientRect()` will return rect at here
 * |line wrap <- caret at the start of the second line
 * ```
 *
 * See https://stackoverflow.com/questions/59767515/incorrect-positioning-of-getboundingclientrect-after-newline-character
 */
export declare function isAtLineEdge(range: Range): false | Range;
export declare function checkFirstLine(range: Range, container: Element): boolean;
export declare function checkLastLine(range: Range, container: HTMLElement): boolean;
//# sourceMappingURL=check-line.d.ts.map