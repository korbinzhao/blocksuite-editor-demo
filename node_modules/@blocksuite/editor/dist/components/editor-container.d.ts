import { type AbstractEditor, type PageBlockModel, ThemeObserver } from '@blocksuite/blocks';
import { ShadowlessElement } from '@blocksuite/lit';
import { type Page } from '@blocksuite/store';
declare const EditorContainer_base: typeof ShadowlessElement & (new (...args: any[]) => import("@blocksuite/lit").DisposableClass);
export declare class EditorContainer extends EditorContainer_base implements AbstractEditor {
    page: Page;
    mode: 'page' | 'edgeless';
    autofocus: boolean;
    private _defaultPageBlock?;
    private _edgelessPageBlock?;
    readonly themeObserver: ThemeObserver;
    get model(): PageBlockModel | null;
    slots: AbstractEditor['slots'];
    connectedCallback(): void;
    disconnectedCallback(): void;
    firstUpdated(): void;
    updated(changedProperties: Map<string, unknown>): void;
    createBlockHub(): Promise<import("@blocksuite/blocks").BlockHub>;
    render(): import("lit").TemplateResult<1> | null;
}
declare global {
    interface HTMLElementTagNameMap {
        'editor-container': EditorContainer;
    }
}
export {};
//# sourceMappingURL=editor-container.d.ts.map