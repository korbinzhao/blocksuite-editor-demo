/**
 * API: /api/workspace/:id/blob/:key
 * GET: get blob
 * PUT: set blob
 * DELETE: delete blob
 */
export function createSimpleServerStorage(id) {
    const localCache = new Map();
    return {
        crud: {
            get: async (key) => {
                if (localCache.has(key)) {
                    return localCache.get(key);
                }
                else {
                    const blob = await fetch(`/api/workspace/${id}/blob/${key}`, {
                        method: 'GET',
                    }).then(response => {
                        if (!response.ok) {
                            throw new Error(`Failed to fetch blob ${key}`);
                        }
                        return response.blob();
                    });
                    localCache.set(key, blob);
                    return blob;
                }
            },
            set: async (key, value) => {
                localCache.set(key, value);
                await fetch(`/api/workspace/${id}/blob/${key}`, {
                    method: 'PUT',
                    body: await value.arrayBuffer(),
                });
                return key;
            },
            delete: async (key) => {
                localCache.delete(key);
                await fetch(`/api/workspace/${id}/blob/${key}`, {
                    method: 'DELETE',
                });
            },
            list: async () => {
                return Array.from(localCache.keys());
            },
        },
    };
}
//# sourceMappingURL=mock-server-storage.js.map