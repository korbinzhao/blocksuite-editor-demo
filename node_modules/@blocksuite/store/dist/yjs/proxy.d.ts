import { Array as YArray, Map as YMap } from 'yjs';
import type { ProxyConfig } from './config.js';
import type { UnRecord } from './utils.js';
export declare function initialize(array: unknown[], yArray: YArray<unknown>, config: ProxyConfig): void;
export declare function initialize(object: UnRecord, yMap: YMap<unknown>, config: ProxyConfig): void;
export declare function initialize(target: unknown[] | UnRecord, yAbstract: YArray<unknown> | YMap<unknown>, config: ProxyConfig): void;
export declare function createYProxy<Data>(yAbstract: YArray<unknown> | YMap<unknown>, config?: ProxyConfig): Data;
export declare function createYMapProxy<Data extends Record<string, unknown>>(yMap: YMap<unknown>, config?: ProxyConfig): Data;
export declare function createYArrayProxy<T = unknown>(yArray: YArray<unknown>, config?: ProxyConfig): T[];
//# sourceMappingURL=proxy.d.ts.map