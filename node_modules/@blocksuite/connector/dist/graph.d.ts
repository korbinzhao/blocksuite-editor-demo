import type { Point } from './simplify-path.js';
export interface GraphNode {
    x: number;
    y: number;
    parent: GraphNode | null;
    cost(fromElement: GraphNode): number;
    f: number;
    h: number;
    g: number;
    closed?: boolean;
    visited?: boolean;
}
export declare class Graph {
    nodes: Record<string, GraphNode>;
    edges: Record<string, Set<string>>;
    connections: Array<GraphNode[]>;
    gridX: number[];
    gridY: number[];
    constructor(points: Point[]);
    private _init;
    private _createGraphNode;
    private _addGraphNodesAndInitGrid;
    private _linkGraphNodes;
    neighbors(node: GraphNode): GraphNode[];
    getNode(p: Point): GraphNode;
    static getKey({ x, y }: Point): string;
    static parseKey(key: string): Point;
}
//# sourceMappingURL=graph.d.ts.map