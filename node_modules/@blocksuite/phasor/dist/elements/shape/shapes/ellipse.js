import { StrokeStyle } from '../../../consts.js';
import { Utils } from '../../../utils/tl-utils.js';
export const EllipseMethods = {
    render(ctx, rc, element) {
        const { w, h, seed, strokeWidth, filled, realFillColor, realStrokeColor, strokeStyle, roughness, } = element;
        const renderOffset = Math.max(strokeWidth, 0) / 2;
        const renderWidth = Math.max(1, w - renderOffset * 2);
        const renderHeight = Math.max(1, h - renderOffset * 2);
        ctx.translate(renderOffset, renderOffset);
        rc.ellipse(renderWidth / 2, renderHeight / 2, renderWidth, renderHeight, {
            seed,
            roughness,
            strokeLineDash: strokeStyle === StrokeStyle.Dashed ? [12, 12] : undefined,
            stroke: realStrokeColor,
            strokeWidth,
            fill: filled ? realFillColor : undefined,
        });
    },
    hitTest(x, y, bound, options) {
        return Utils.pointInEllipse([x, y], [bound.x + bound.w / 2, bound.y + bound.h / 2], bound.w / 2, bound.h / 2);
    },
};
//# sourceMappingURL=ellipse.js.map