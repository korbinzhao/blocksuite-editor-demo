import type { TemplateResult } from 'lit/html.js';
import type { BlockModelProps } from '../../types.js';
export type BlockConfig<ALLProps extends Record<string, any> = BlockModelProps, Flavour extends keyof ALLProps & string = keyof ALLProps & string> = {
    flavour: Flavour;
    type: ALLProps[Flavour]['type'];
    name: string;
    hotkey: string | null;
    icon: TemplateResult<1>;
};
export declare const paragraphConfig: ({
    flavour: "affine:paragraph";
    type: string;
    name: string;
    hotkey: string;
    icon: TemplateResult<1>;
} | {
    flavour: "affine:list";
    type: string;
    name: string;
    hotkey: string;
    icon: TemplateResult<1>;
} | {
    flavour: "affine:list";
    type: string;
    name: string;
    hotkey: null;
    icon: TemplateResult<1>;
} | {
    flavour: "affine:code";
    type: undefined;
    name: string;
    hotkey: string;
    icon: TemplateResult<1>;
} | {
    flavour: "affine:paragraph";
    type: string;
    name: string;
    hotkey: null;
    icon: TemplateResult<1>;
} | {
    flavour: "affine:divider";
    type: string;
    name: string;
    hotkey: string;
    icon: TemplateResult<1>;
})[];
export declare const BLOCKHUB_TEXT_ITEMS: ({
    flavour: string;
    type: string;
    name: string;
    description: string;
    icon: TemplateResult<1>;
    tooltip: string;
} | {
    flavour: string;
    type: null;
    name: string;
    description: string;
    icon: TemplateResult<1>;
    tooltip: string;
})[];
export declare const BLOCKHUB_LIST_ITEMS: {
    flavour: string;
    type: string;
    name: string;
    description: string;
    icon: TemplateResult<1>;
    tooltip: string;
}[];
export declare const BLOCKHUB_FILE_ITEMS: {
    flavour: string;
    type: string;
    name: string;
    description: string;
    icon: TemplateResult<1>;
    tooltip: string;
}[];
//# sourceMappingURL=block-hub.d.ts.map