const defaultPlaygroundURL = new URL(`http://localhost:5173/`);
export async function type(page, content) {
    await page.keyboard.type(content, { delay: 50 });
}
export async function press(page, content) {
    await page.keyboard.press(content, { delay: 50 });
}
export async function enterVirgoPlayground(page) {
    const url = new URL('examples/virgo/index.html', defaultPlaygroundURL);
    await page.goto(url.toString());
}
export async function focusVirgoRichText(page, index = 0) {
    await page.evaluate(index => {
        const richTexts = document
            .querySelector('test-page')
            ?.querySelectorAll('virgo-test-rich-text');
        if (!richTexts) {
            throw new Error('Cannot find virgo-test-rich-text');
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        richTexts[index].vEditor.focusEnd();
    }, index);
}
export async function getDeltaFromVirgoRichText(page, index = 0) {
    await page.waitForTimeout(100);
    return await page.evaluate(index => {
        const richTexts = document
            .querySelector('test-page')
            ?.querySelectorAll('virgo-test-rich-text');
        if (!richTexts) {
            throw new Error('Cannot find virgo-test-rich-text');
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const editor = richTexts[index].vEditor;
        return editor.yText.toDelta();
    }, index);
}
export async function setVirgoRichTextRange(page, vRange, index = 0) {
    await page.evaluate(([vRange, index]) => {
        const richTexts = document
            .querySelector('test-page')
            ?.querySelectorAll('virgo-test-rich-text');
        if (!richTexts) {
            throw new Error('Cannot find virgo-test-rich-text');
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const editor = richTexts[index].vEditor;
        editor.setVRange(vRange);
    }, [vRange, index]);
}
export async function getVirgoRichTextLine(page, index, i = 0) {
    return await page.evaluate(([index, i]) => {
        const richTexts = document
            .querySelector('test-page')
            ?.querySelectorAll('virgo-test-rich-text');
        if (!richTexts) {
            throw new Error('Cannot find virgo-test-rich-text');
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const editor = richTexts[i].vEditor;
        const line = editor.getLine(index);
        return [line[0].textContent, line[1]];
    }, [index, i]);
}
//# sourceMappingURL=misc.js.map