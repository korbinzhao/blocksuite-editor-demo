import type { TemplateResult } from 'lit';
import type { BaseTextAttributes } from './utils/index.js';
export type DeltaInsert<TextAttributes extends BaseTextAttributes = BaseTextAttributes> = {
    insert: string;
    attributes?: TextAttributes;
};
export type AttributeRenderer<TextAttributes extends BaseTextAttributes = BaseTextAttributes> = (delta: DeltaInsert<TextAttributes>) => TemplateResult<1>;
export interface VRange {
    index: number;
    length: number;
}
export type VRangeUpdatedProp = [
    range: VRange,
    type: 'native' | 'input' | 'other'
];
export type DeltaEntry<TextAttributes extends BaseTextAttributes = BaseTextAttributes> = [delta: DeltaInsert<TextAttributes>, range: VRange];
export type NativePoint = readonly [node: Node, offset: number];
export type TextPoint = readonly [text: Text, offset: number];
export interface DomPoint {
    text: Text;
    index: number;
}
//# sourceMappingURL=types.d.ts.map