var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import { ZERO_WIDTH_SPACE } from '../consts.js';
let VirgoLine = class VirgoLine extends LitElement {
    constructor() {
        super(...arguments);
        this.elements = [];
    }
    get vElements() {
        return Array.from(this.querySelectorAll('v-element'));
    }
    get textLength() {
        return this.vElements.reduce((acc, el) => acc + el.delta.insert.length, 0);
    }
    get textContent() {
        return this.vElements.reduce((acc, el) => acc + el.delta.insert, '');
    }
    async getUpdateComplete() {
        const result = await super.getUpdateComplete();
        await Promise.all(this.vElements.map(el => el.updateComplete));
        return result;
    }
    firstUpdated() {
        this.style.display = 'block';
    }
    render() {
        if (this.elements.length === 0) {
            return html `<div><v-text .str=${ZERO_WIDTH_SPACE}></v-text></div>`;
        }
        return html `<div>${this.elements}</div>`;
    }
    createRenderRoot() {
        return this;
    }
};
__decorate([
    property({ attribute: false })
], VirgoLine.prototype, "elements", void 0);
VirgoLine = __decorate([
    customElement('v-line')
], VirgoLine);
export { VirgoLine };
//# sourceMappingURL=virgo-line.js.map