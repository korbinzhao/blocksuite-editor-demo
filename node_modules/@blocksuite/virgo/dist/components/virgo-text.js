var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, LitElement } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import { styleMap } from 'lit/directives/style-map.js';
import { ZERO_WIDTH_SPACE } from '../consts.js';
let VText = class VText extends LitElement {
    constructor() {
        super(...arguments);
        this.str = ZERO_WIDTH_SPACE;
        this.styles = styleMap({
            'word-wrap': 'break-word',
            'white-space': 'break-spaces',
        });
    }
    render() {
        // we need to avoid \n appearing before and after the span element, which will
        // cause the sync problem about the cursor position
        return html `<span style=${this.styles} data-virgo-text="true"
      >${this.str}</span
    >`;
    }
    createRenderRoot() {
        return this;
    }
};
__decorate([
    property()
], VText.prototype, "str", void 0);
__decorate([
    property()
], VText.prototype, "styles", void 0);
VText = __decorate([
    customElement('v-text')
], VText);
export { VText };
//# sourceMappingURL=virgo-text.js.map